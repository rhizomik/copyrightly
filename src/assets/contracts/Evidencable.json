{
  "contractName": "Evidencable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getEvidenceCount",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "addEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "addEvidenceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"addEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"addEvidenceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getEvidenceCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roberto Garc\\u00eda (http://rhizomik.net/~roberto/)\",\"kind\":\"dev\",\"methods\":{\"addEvidence(string)\":{\"params\":{\"hash\":\"Hash of the manifestation content, for instance IPFS Base58 Hash\"}},\"addEvidenceProvider(address)\":{\"params\":{\"provider\":\"The address of a contract providing evidence\"}},\"getEvidenceCount(string)\":{\"params\":{\"hash\":\"Hash of the manifestation content, for instance IPFS Base58 Hash\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Library to implement items that can accumulate evidence\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEvidence(string)\":{\"notice\":\"Adds one to the evidence count for the manifestation with `hash`.\"},\"addEvidenceProvider(address)\":{\"notice\":\"Adds an evidence provider `provider` contract that can then call addEvidence(...) to add evidence.\"},\"getEvidenceCount(string)\":{\"notice\":\"Get the evidence count for the manifestation with `hash`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":\"Evidencable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":{\"keccak256\":\"0x8da32bbbaad50226889a8114299ea2ada47347f6d071e4b902a3c7ab6cfa570c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4fc1530e99678887f3047bfd648125326972e4db7441834693a07eb6f44ebaab\",\"dweb:/ipfs/QmVgsrQQiR3ohd4CfRQxkGvxA1yTn7ubqj6ghtqqXTDpsV\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610577806100616000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063144b763a1461006757806351a94a5f1461007c578063646986fb1461008f578063715018a6146100b95780638da5cb5b146100c1578063f2fde38b146100dc575b600080fd5b61007a6100753660046103bb565b6100ef565b005b61007a61008a3660046103e4565b610149565b6100a261009d3660046103e4565b61021f565b60405160ff90911681526020015b60405180910390f35b61007a61024a565b6000546040516001600160a01b0390911681526020016100b0565b61007a6100ea3660046103bb565b6102be565b6000546001600160a01b031633146101225760405162461bcd60e51b8152600401610119906104d0565b60405180910390fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff166101bb5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920726567697374657265642065766964656e63652070726f766964656044820152691c9cc8185b1b1bddd95960b21b6064820152608401610119565b6101e960016002836040516101d09190610495565b9081526040519081900360200190205460ff16906103a8565b6002826040516101f99190610495565b908152604051908190036020019020805460ff9290921660ff1990921691909117905550565b60006002826040516102319190610495565b9081526040519081900360200190205460ff1692915050565b6000546001600160a01b031633146102745760405162461bcd60e51b8152600401610119906104d0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102e85760405162461bcd60e51b8152600401610119906104d0565b6001600160a01b03811661034d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610119565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006103b48284610505565b9392505050565b6000602082840312156103cd57600080fd5b81356001600160a01b03811681146103b457600080fd5b6000602082840312156103f657600080fd5b813567ffffffffffffffff8082111561040e57600080fd5b818401915084601f83011261042257600080fd5b8135818111156104345761043461052b565b604051601f8201601f19908116603f0116810190838211818310171561045c5761045c61052b565b8160405282815287602084870101111561047557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156104b6576020818601810151858301520161049c565b818111156104c5576000828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561052657634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dc22d1138f11ec91cfe7fb7fea3e842bd390cf353fb089828d874d7a73be2a5364736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063144b763a1461006757806351a94a5f1461007c578063646986fb1461008f578063715018a6146100b95780638da5cb5b146100c1578063f2fde38b146100dc575b600080fd5b61007a6100753660046103bb565b6100ef565b005b61007a61008a3660046103e4565b610149565b6100a261009d3660046103e4565b61021f565b60405160ff90911681526020015b60405180910390f35b61007a61024a565b6000546040516001600160a01b0390911681526020016100b0565b61007a6100ea3660046103bb565b6102be565b6000546001600160a01b031633146101225760405162461bcd60e51b8152600401610119906104d0565b60405180910390fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff166101bb5760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c7920726567697374657265642065766964656e63652070726f766964656044820152691c9cc8185b1b1bddd95960b21b6064820152608401610119565b6101e960016002836040516101d09190610495565b9081526040519081900360200190205460ff16906103a8565b6002826040516101f99190610495565b908152604051908190036020019020805460ff9290921660ff1990921691909117905550565b60006002826040516102319190610495565b9081526040519081900360200190205460ff1692915050565b6000546001600160a01b031633146102745760405162461bcd60e51b8152600401610119906104d0565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102e85760405162461bcd60e51b8152600401610119906104d0565b6001600160a01b03811661034d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610119565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006103b48284610505565b9392505050565b6000602082840312156103cd57600080fd5b81356001600160a01b03811681146103b457600080fd5b6000602082840312156103f657600080fd5b813567ffffffffffffffff8082111561040e57600080fd5b818401915084601f83011261042257600080fd5b8135818111156104345761043461052b565b604051601f8201601f19908116603f0116810190838211818310171561045c5761045c61052b565b8160405282815287602084870101111561047557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b818110156104b6576020818601810151858301520161049c565b818111156104c5576000828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561052657634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dc22d1138f11ec91cfe7fb7fea3e842bd390cf353fb089828d874d7a73be2a5364736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3600:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:10"
                  },
                  "nodeType": "YulIf",
                  "src": "200:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:10",
                "type": ""
              }
            ],
            "src": "14:286:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "385:842:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "431:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "440:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "443:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "433:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "433:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "433:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "406:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "402:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "402:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "427:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "398:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "395:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "456:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "483:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "470:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "470:23:10"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "460:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "502:28:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "512:18:10",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "506:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "557:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "566:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "569:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "559:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "559:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "559:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "545:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "553:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "542:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:14:10"
                  },
                  "nodeType": "YulIf",
                  "src": "539:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "582:32:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:10"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "607:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "592:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:22:10"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "586:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "662:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "671:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "674:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "664:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "664:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "664:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "641:2:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "645:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "637:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "637:13:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "652:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "633:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "633:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "626:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "623:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "687:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "710:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "697:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:16:10"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "691:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "736:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "738:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "738:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "738:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "728:2:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "732:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "725:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:10:10"
                  },
                  "nodeType": "YulIf",
                  "src": "722:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "767:17:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "777:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:7:10"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "771:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "793:23:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "813:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "807:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "807:9:10"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "797:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "825:71:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "871:2:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "875:4:10",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "867:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "867:13:10"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "882:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "863:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "863:22:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "887:2:10",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:31:10"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "892:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:40:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "843:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "843:53:10"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "829:10:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "955:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "957:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "957:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "957:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "914:10:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "926:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "911:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "934:10:10"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "946:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "931:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "931:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "908:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:46:10"
                  },
                  "nodeType": "YulIf",
                  "src": "905:2:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "993:2:10",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "997:10:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "986:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:22:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:22:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1024:6:10"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1032:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1017:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:18:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1017:18:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1081:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1090:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1093:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1083:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1083:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1083:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1058:2:10"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1062:2:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1054:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1054:11:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1067:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1050:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1050:20:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1072:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1047:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1044:2:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1123:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1131:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1119:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1119:15:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1140:2:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1144:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1136:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1136:11:10"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1149:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1106:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:46:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1106:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1176:6:10"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1184:2:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1172:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1172:15:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1189:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1168:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1168:24:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1161:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1161:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1205:16:10",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1215:6:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1205:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "351:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "362:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "374:6:10",
                "type": ""
              }
            ],
            "src": "305:922:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1371:289:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1381:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1401:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1395:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1395:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1385:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1417:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1426:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1421:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1488:77:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1513:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1518:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1509:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1509:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1536:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1544:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1532:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1532:14:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1548:4:10",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1528:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1528:25:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1522:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1522:32:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1502:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1502:53:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1502:53:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1447:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1450:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1444:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1458:21:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1460:17:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1469:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1472:4:10",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1465:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1465:12:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1460:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1440:3:10",
                    "statements": []
                  },
                  "src": "1436:129:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1591:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1609:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1600:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1600:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1618:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1593:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1593:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1593:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1580:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1583:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1577:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1574:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1631:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1642:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1647:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1638:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1631:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1347:3:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1352:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1363:3:10",
                "type": ""
              }
            ],
            "src": "1232:428:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1766:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1776:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1788:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1799:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1784:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1776:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1818:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1833:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1849:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1854:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1845:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1845:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1858:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1841:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1841:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1829:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1829:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1811:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1811:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1735:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1746:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1757:4:10",
                "type": ""
              }
            ],
            "src": "1665:203:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2047:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2064:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2075:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2057:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2057:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2098:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2109:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2094:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2094:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2114:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2087:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2087:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2087:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2137:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2148:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2133:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2133:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2153:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2126:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2126:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2208:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2219:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2204:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2204:18:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2224:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2197:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2197:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2197:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2242:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2250:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2250:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2242:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2024:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2038:4:10",
                "type": ""
              }
            ],
            "src": "1873:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2454:182:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2471:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2482:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2464:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2464:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2505:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2516:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2501:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2501:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2521:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2494:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2494:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2555:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2540:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2560:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2533:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2533:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2533:62:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2604:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2616:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2627:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2612:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2612:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2604:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2431:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2445:4:10",
                "type": ""
              }
            ],
            "src": "2280:356:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2815:232:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2832:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2843:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2825:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2825:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2825:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2866:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2877:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2862:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2882:2:10",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2855:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2855:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2855:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2905:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2916:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2901:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2901:18:10"
                      },
                      {
                        "hexValue": "4f6e6c7920726567697374657265642065766964656e63652070726f76696465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2921:34:10",
                        "type": "",
                        "value": "Only registered evidence provide"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2894:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2894:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2894:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2976:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2987:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2972:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2972:18:10"
                      },
                      {
                        "hexValue": "727320616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2992:12:10",
                        "type": "",
                        "value": "rs allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2965:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2965:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2965:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3014:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3026:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3037:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3022:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3022:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3014:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2792:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2806:4:10",
                "type": ""
              }
            ],
            "src": "2641:406:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3149:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3159:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3171:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3167:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3167:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3159:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3201:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3216:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3224:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3212:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3212:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3194:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3194:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3194:36:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3118:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3129:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3140:4:10",
                "type": ""
              }
            ],
            "src": "3052:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3289:177:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3324:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3345:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3352:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3357:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3348:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3348:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3338:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3338:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3338:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3389:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3392:4:10",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3382:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3382:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3382:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3417:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3420:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3410:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3410:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3410:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3305:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3312:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3308:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3308:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3302:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3299:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3444:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3455:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3458:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3451:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3451:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3444:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3272:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3275:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3281:3:10",
                "type": ""
              }
            ],
            "src": "3241:225:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3503:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3520:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3527:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3532:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3513:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3513:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3513:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3560:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3563:4:10",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3584:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3587:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3577:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3577:15:10"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3471:127:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Only registered evidence provide\")\n        mstore(add(headStart, 96), \"rs allowed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "327:1687:1:-:0;;;;;;;;;;;;-1:-1:-1;867:17:6;909:18;;-1:-1:-1;;;;;;909:18:6;665:10:8;909:18:6;;;;;942:43;;665:10:8;;;;942:43:6;;867:17;;942:43;857:135;327:1687:1;;;;;;",
  "deployedSourceMap": "327:1687:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:115;;;;;;:::i;:::-;;:::i;:::-;;1192:151;;;;;;:::i;:::-;;:::i;901:118::-;;;;;;:::i;:::-;;:::i;:::-;;;3224:4:10;3212:17;;;3194:36;;3182:2;3167:18;901:118:1;;;;;;;;1700:145:6;;;:::i;1068:85::-;1114:7;1140:6;1068:85;;-1:-1:-1;;;;;1140:6:6;;;1811:51:10;;1799:2;1784:18;1068:85:6;1766:102:10;1994:240:6;;;;;;:::i;:::-;;:::i;1541:115:1:-;1114:7:6;1140:6;-1:-1:-1;;;;;1140:6:6;665:10:8;1280:23:6;1272:68;;;;-1:-1:-1;;;1272:68:6;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1615:27:1::1;;::::0;;;1645:4:::1;1615:27;::::0;;;;;;;:34;;-1:-1:-1;;1615:34:1::1;::::0;;::::1;::::0;;1541:115::o;1192:151::-;660:10;642:29;;;;:17;:29;;;;;;;;634:84;;;;-1:-1:-1;;;634:84:1;;2843:2:10;634:84:1;;;2825:21:10;2882:2;2862:18;;;2855:30;2921:34;2901:18;;;2894:62;-1:-1:-1;;;2972:18:10;;;2965:40;3022:19;;634:84:1;2815:232:10;634:84:1;1308:27:::1;1333:1;1308:14;1323:4;1308:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;::::0;:24:::1;:27::i;:::-;1279:14;1294:4;1279:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:57;;::::1;::::0;;;::::1;-1:-1:-1::0;;1279:57:1;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1192:151:1:o;901:118::-;968:5;992:14;1007:4;992:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;901:118;-1:-1:-1;;901:118:1:o;1700:145:6:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:6;665:10:8;1280:23:6;1272:68;;;;-1:-1:-1;;;1272:68:6;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:6;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:6::1;::::0;;1700:145::o;1994:240::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:6;665:10:8;1280:23:6;1272:68;;;;-1:-1:-1;;;1272:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:6;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:6;;2075:2:10;2074:73:6::1;::::0;::::1;2057:21:10::0;2114:2;2094:18;;;2087:30;2153:34;2133:18;;;2126:62;-1:-1:-1;;;2204:18:10;;;2197:36;2250:19;;2074:73:6::1;2047:228:10::0;2074:73:6::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:6;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:6::1;-1:-1:-1::0;;;;;2210:17:6;;;::::1;::::0;;;::::1;::::0;;1994:240::o;2672:96:9:-;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:9:o;14:286:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:10;;210:42;;200:2;;266:1;263;256:12;305:922;374:6;427:2;415:9;406:7;402:23;398:32;395:2;;;443:1;440;433:12;395:2;483:9;470:23;512:18;553:2;545:6;542:14;539:2;;;569:1;566;559:12;539:2;607:6;596:9;592:22;582:32;;652:7;645:4;641:2;637:13;633:27;623:2;;674:1;671;664:12;623:2;710;697:16;732:2;728;725:10;722:2;;;738:18;;:::i;:::-;813:2;807:9;781:2;867:13;;-1:-1:-1;;863:22:10;;;887:2;859:31;855:40;843:53;;;911:18;;;931:22;;;908:46;905:2;;;957:18;;:::i;:::-;997:10;993:2;986:22;1032:2;1024:6;1017:18;1072:7;1067:2;1062;1058;1054:11;1050:20;1047:33;1044:2;;;1093:1;1090;1083:12;1044:2;1149;1144;1140;1136:11;1131:2;1123:6;1119:15;1106:46;1194:1;1172:15;;;1189:2;1168:24;1161:35;;;;-1:-1:-1;1176:6:10;385:842;-1:-1:-1;;;;;385:842:10:o;1232:428::-;1363:3;1401:6;1395:13;1426:1;1436:129;1450:6;1447:1;1444:13;1436:129;;;1548:4;1532:14;;;1528:25;;1522:32;1509:11;;;1502:53;1465:12;1436:129;;;1583:6;1580:1;1577:13;1574:2;;;1618:1;1609:6;1604:3;1600:16;1593:27;1574:2;-1:-1:-1;1638:16:10;;;;;1371:289;-1:-1:-1;;1371:289:10:o;2280:356::-;2482:2;2464:21;;;2501:18;;;2494:30;2560:34;2555:2;2540:18;;2533:62;2627:2;2612:18;;2454:182::o;3241:225::-;3281:3;3312:1;3308:6;3305:1;3302:13;3299:2;;;3357:10;3352:3;3348:20;3345:1;3338:31;3392:4;3389:1;3382:15;3420:4;3417:1;3410:15;3299:2;-1:-1:-1;3451:9:10;;3289:177::o;3471:127::-;3532:10;3527:3;3523:20;3520:1;3513:31;3563:4;3560:1;3553:15;3587:4;3584:1;3577:15",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.6;\n\nimport \"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\n\n/// @title Library to implement items that can accumulate evidence\n/// @author Roberto García (http://rhizomik.net/~roberto/)\ncontract Evidencable is Ownable {\n    using SafeMath for uint8;\n\n    mapping(address => bool) private evidenceProviders;\n    mapping(string => uint8) private evidenceCounts;\n\n    /// @dev Modifier controlling that only registered evidence providers are allowed\n    modifier onlyEvidenceProvider() {\n        require(evidenceProviders[msg.sender], \"Only registered evidence providers allowed\");\n        _;\n    }\n\n    /// @notice Get the evidence count for the manifestation with `hash`.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function getEvidenceCount(string memory hash) public view returns (uint8) {\n        return evidenceCounts[hash];\n    }\n\n    /// @notice Adds one to the evidence count for the manifestation with `hash`.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function addEvidence(string memory hash) virtual public onlyEvidenceProvider {\n        evidenceCounts[hash] = uint8(evidenceCounts[hash].add(1));\n    }\n\n    /// @notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n    /// to add evidence.\n    /// @param provider The address of a contract providing evidence\n    function addEvidenceProvider(address provider) public onlyOwner {\n        evidenceProviders[provider] = true;\n    }\n\n    /// @notice Check if the evidencable `hash` has no evidence yet.\n    /// @dev Used to check if the corresponding item evidence count is 0.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function isUnevidenced(string memory hash) internal view returns(bool) {\n        return (evidenceCounts[hash] == 0);\n    }\n}\n",
  "sourcePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
  "ast": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
    "exportedSymbols": {
      "Context": [
        1000
      ],
      "Evidencable": [
        276
      ],
      "Ownable": [
        885
      ],
      "SafeMath": [
        1312
      ]
    },
    "id": 277,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 179,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 180,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 1313,
        "src": "71:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 181,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 886,
        "src": "137:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 183,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 885,
              "src": "351:7:1"
            },
            "id": 184,
            "nodeType": "InheritanceSpecifier",
            "src": "351:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 182,
          "nodeType": "StructuredDocumentation",
          "src": "200:127:1",
          "text": "@title Library to implement items that can accumulate evidence\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 276,
        "linearizedBaseContracts": [
          276,
          885,
          1000
        ],
        "name": "Evidencable",
        "nameLocation": "336:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 187,
            "libraryName": {
              "id": 185,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1312,
              "src": "371:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "365:25:1",
            "typeName": {
              "id": 186,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "384:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "constant": false,
            "id": 191,
            "mutability": "mutable",
            "name": "evidenceProviders",
            "nameLocation": "429:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "396:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 190,
              "keyType": {
                "id": 188,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "396:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 189,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 195,
            "mutability": "mutable",
            "name": "evidenceCounts",
            "nameLocation": "485:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "452:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
              "typeString": "mapping(string => uint8)"
            },
            "typeName": {
              "id": 194,
              "keyType": {
                "id": 192,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "460:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "452:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                "typeString": "mapping(string => uint8)"
              },
              "valueType": {
                "id": 193,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "470:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "624:112:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 199,
                          "name": "evidenceProviders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "642:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "660:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "660:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "642:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        },
                        "value": "Only registered evidence providers allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "634:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:84:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "634:84:1"
                },
                {
                  "id": 206,
                  "nodeType": "PlaceholderStatement",
                  "src": "728:1:1"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "506:81:1",
              "text": "@dev Modifier controlling that only registered evidence providers are allowed"
            },
            "id": 208,
            "name": "onlyEvidenceProvider",
            "nameLocation": "601:20:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:1"
            },
            "src": "592:144:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "975:44:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 216,
                      "name": "evidenceCounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "992:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                        "typeString": "mapping(string memory => uint8)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "id": 217,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "1007:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "992:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "985:27:1"
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "742:154:1",
              "text": "@notice Get the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "646986fb",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceCount",
            "nameLocation": "910:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "941:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "927:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:20:1"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "968:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:7:1"
            },
            "scope": 276,
            "src": "901:118:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1269:74:1",
              "statements": [
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 229,
                        "name": "evidenceCounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "1279:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                          "typeString": "mapping(string memory => uint8)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "id": 230,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "1294:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1279:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1333:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 234,
                                "name": "evidenceCounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "1308:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                                  "typeString": "mapping(string memory => uint8)"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "1323:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1308:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1176,
                            "src": "1308:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1308:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1302:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1302:5:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1302:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1279:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:57:1"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "1025:162:1",
              "text": "@notice Adds one to the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "51a94a5f",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 226,
                  "name": "onlyEvidenceProvider",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 208,
                  "src": "1248:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:20:1"
              }
            ],
            "name": "addEvidence",
            "nameLocation": "1201:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1227:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1213:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:20:1"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:1"
            },
            "scope": 276,
            "src": "1192:151:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1605:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 252,
                        "name": "evidenceProviders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1615:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 254,
                      "indexExpression": {
                        "id": 253,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "1633:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1615:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1645:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1615:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:34:1"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "1349:187:1",
              "text": "@notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n to add evidence.\n @param provider The address of a contract providing evidence"
            },
            "functionSelector": "144b763a",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 834,
                  "src": "1595:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1595:9:1"
              }
            ],
            "name": "addEvidenceProvider",
            "nameLocation": "1550:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1578:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1570:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:18:1"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:1"
            },
            "scope": 276,
            "src": "1541:115:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1961:51:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 267,
                            "name": "evidenceCounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "1979:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                              "typeString": "mapping(string memory => uint8)"
                            }
                          },
                          "id": 269,
                          "indexExpression": {
                            "id": 268,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1994:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1979:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2003:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1979:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 272,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1978:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "1971:34:1"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "1662:223:1",
              "text": "@notice Check if the evidencable `hash` has no evidence yet.\n @dev Used to check if the corresponding item evidence count is 0.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnevidenced",
            "nameLocation": "1899:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1927:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1913:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:20:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1955:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1954:6:1"
            },
            "scope": 276,
            "src": "1890:122:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 277,
        "src": "327:1687:1",
        "usedErrors": []
      }
    ],
    "src": "46:1969:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
    "exportedSymbols": {
      "Context": [
        1000
      ],
      "Evidencable": [
        276
      ],
      "Ownable": [
        885
      ],
      "SafeMath": [
        1312
      ]
    },
    "id": 277,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 179,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 180,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 1313,
        "src": "71:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 181,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 277,
        "sourceUnit": 886,
        "src": "137:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 183,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 885,
              "src": "351:7:1"
            },
            "id": 184,
            "nodeType": "InheritanceSpecifier",
            "src": "351:7:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 182,
          "nodeType": "StructuredDocumentation",
          "src": "200:127:1",
          "text": "@title Library to implement items that can accumulate evidence\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 276,
        "linearizedBaseContracts": [
          276,
          885,
          1000
        ],
        "name": "Evidencable",
        "nameLocation": "336:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 187,
            "libraryName": {
              "id": 185,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1312,
              "src": "371:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "365:25:1",
            "typeName": {
              "id": 186,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "384:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "constant": false,
            "id": 191,
            "mutability": "mutable",
            "name": "evidenceProviders",
            "nameLocation": "429:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "396:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 190,
              "keyType": {
                "id": 188,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "404:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "396:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 189,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "415:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 195,
            "mutability": "mutable",
            "name": "evidenceCounts",
            "nameLocation": "485:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 276,
            "src": "452:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
              "typeString": "mapping(string => uint8)"
            },
            "typeName": {
              "id": 194,
              "keyType": {
                "id": 192,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "460:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "452:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                "typeString": "mapping(string => uint8)"
              },
              "valueType": {
                "id": 193,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "470:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "624:112:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 199,
                          "name": "evidenceProviders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "642:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "660:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "660:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "642:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        },
                        "value": "Only registered evidence providers allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        }
                      ],
                      "id": 198,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "634:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:84:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "634:84:1"
                },
                {
                  "id": 206,
                  "nodeType": "PlaceholderStatement",
                  "src": "728:1:1"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "506:81:1",
              "text": "@dev Modifier controlling that only registered evidence providers are allowed"
            },
            "id": 208,
            "name": "onlyEvidenceProvider",
            "nameLocation": "601:20:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:1"
            },
            "src": "592:144:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "975:44:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 216,
                      "name": "evidenceCounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "992:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                        "typeString": "mapping(string memory => uint8)"
                      }
                    },
                    "id": 218,
                    "indexExpression": {
                      "id": 217,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "1007:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "992:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 215,
                  "id": 219,
                  "nodeType": "Return",
                  "src": "985:27:1"
                }
              ]
            },
            "documentation": {
              "id": 209,
              "nodeType": "StructuredDocumentation",
              "src": "742:154:1",
              "text": "@notice Get the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "646986fb",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceCount",
            "nameLocation": "910:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "941:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "927:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:20:1"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "968:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "967:7:1"
            },
            "scope": 276,
            "src": "901:118:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "1269:74:1",
              "statements": [
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 229,
                        "name": "evidenceCounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "1279:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                          "typeString": "mapping(string memory => uint8)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "id": 230,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "1294:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1279:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1333:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 234,
                                "name": "evidenceCounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "1308:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                                  "typeString": "mapping(string memory => uint8)"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "id": 235,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "1323:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1308:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1176,
                            "src": "1308:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1308:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1302:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1302:5:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1302:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1279:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:57:1"
                }
              ]
            },
            "documentation": {
              "id": 222,
              "nodeType": "StructuredDocumentation",
              "src": "1025:162:1",
              "text": "@notice Adds one to the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "51a94a5f",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 226,
                  "name": "onlyEvidenceProvider",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 208,
                  "src": "1248:20:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:20:1"
              }
            ],
            "name": "addEvidence",
            "nameLocation": "1201:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1227:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "1213:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:20:1"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:1"
            },
            "scope": 276,
            "src": "1192:151:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1605:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 252,
                        "name": "evidenceProviders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "1615:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 254,
                      "indexExpression": {
                        "id": 253,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "1633:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1615:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1645:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1615:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "1615:34:1"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "1349:187:1",
              "text": "@notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n to add evidence.\n @param provider The address of a contract providing evidence"
            },
            "functionSelector": "144b763a",
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 249,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 834,
                  "src": "1595:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1595:9:1"
              }
            ],
            "name": "addEvidenceProvider",
            "nameLocation": "1550:19:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1578:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1570:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1570:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1569:18:1"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:0:1"
            },
            "scope": 276,
            "src": "1541:115:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1961:51:1",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 267,
                            "name": "evidenceCounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "1979:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint8_$",
                              "typeString": "mapping(string memory => uint8)"
                            }
                          },
                          "id": 269,
                          "indexExpression": {
                            "id": 268,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1994:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1979:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2003:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1979:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 272,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1978:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 273,
                  "nodeType": "Return",
                  "src": "1971:34:1"
                }
              ]
            },
            "documentation": {
              "id": 260,
              "nodeType": "StructuredDocumentation",
              "src": "1662:223:1",
              "text": "@notice Check if the evidencable `hash` has no evidence yet.\n @dev Used to check if the corresponding item evidence count is 0.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash"
            },
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnevidenced",
            "nameLocation": "1899:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1927:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1913:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:20:1"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1955:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1954:6:1"
            },
            "scope": 276,
            "src": "1890:122:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 277,
        "src": "327:1687:1",
        "usedErrors": []
      }
    ],
    "src": "46:1969:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-30T19:44:42.219Z",
  "devdoc": {
    "author": "Roberto García (http://rhizomik.net/~roberto/)",
    "kind": "dev",
    "methods": {
      "addEvidence(string)": {
        "params": {
          "hash": "Hash of the manifestation content, for instance IPFS Base58 Hash"
        }
      },
      "addEvidenceProvider(address)": {
        "params": {
          "provider": "The address of a contract providing evidence"
        }
      },
      "getEvidenceCount(string)": {
        "params": {
          "hash": "Hash of the manifestation content, for instance IPFS Base58 Hash"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Library to implement items that can accumulate evidence",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addEvidence(string)": {
        "notice": "Adds one to the evidence count for the manifestation with `hash`."
      },
      "addEvidenceProvider(address)": {
        "notice": "Adds an evidence provider `provider` contract that can then call addEvidence(...) to add evidence."
      },
      "getEvidenceCount(string)": {
        "notice": "Get the evidence count for the manifestation with `hash`."
      }
    },
    "version": 1
  }
}