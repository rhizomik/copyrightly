{
  "contractName": "Evidencable",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "getEvidenceCount",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "addEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "addEvidenceProvider",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"addEvidenceProvider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"addEvidence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getEvidenceCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Roberto Garc\\u00eda (http://rhizomik.net/~roberto/)\",\"methods\":{\"addEvidence(string)\":{\"params\":{\"hash\":\"Hash of the manifestation content, for instance IPFS Base58 Hash\"}},\"addEvidenceProvider(address)\":{\"params\":{\"provider\":\"The address of a contract providing evidence\"}},\"getEvidenceCount(string)\":{\"params\":{\"hash\":\"Hash of the manifestation content, for instance IPFS Base58 Hash\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Library to implement items that can accumulate evidence\"},\"userdoc\":{\"methods\":{\"addEvidence(string)\":{\"notice\":\"Adds one to the evidence count for the manifestation with `hash`.\"},\"addEvidenceProvider(address)\":{\"notice\":\"Adds an evidence provider `provider` contract that can then call addEvidence(...) to add evidence.\"},\"getEvidenceCount(string)\":{\"notice\":\"Get the evidence count for the manifestation with `hash`.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":\"Evidencable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":{\"keccak256\":\"0xaa3e7882cb4fd081c14b2c65c5d0eaef76d94170c33917a0fc528201f09c1f90\",\"urls\":[\"bzzr://6d22e3fc2b1f9af067df4b679a6e8ece0e68f07021ea32549faf39f7134b5dc7\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x60806040526000610017640100000000610066810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b6107a6806100796000396000f3fe608060405234801561001057600080fd5b506004361061009a576000357c010000000000000000000000000000000000000000000000000000000090048063715018a611610078578063715018a6146102295780638da5cb5b146102315780638f32d59b14610255578063f2fde38b146102715761009a565b8063144b763a1461009f57806351a94a5f146100c7578063646986fb1461016d575b600080fd5b6100c5600480360360208110156100b557600080fd5b5035600160a060020a0316610297565b005b6100c5600480360360208110156100dd57600080fd5b8101906020810181356401000000008111156100f857600080fd5b82018360208201111561010a57600080fd5b8035906020019184600183028401116401000000008311171561012c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061031c945050505050565b6102136004803603602081101561018357600080fd5b81019060208101813564010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460018302840111640100000000831117156101d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610453945050505050565b6040805160ff9092168252519081900360200190f35b6100c56104be565b610239610573565b60408051600160a060020a039092168252519081900360200190f35b61025d610582565b604080519115158252519081900360200190f35b6100c56004803603602081101561028757600080fd5b5035600160a060020a03166105a6565b61029f610582565b15156102f5576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff16151561036f5760405160e560020a62461bcd02815260040180806020018281038252602a815260200180610751602a913960400191505060405180910390fd5b6103de60016002836040518082805190602001908083835b602083106103a65780518252601f199092019160209182019101610387565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff1692915050610610565b6002826040518082805190602001908083835b602083106104105780518252601f1990920191602091820191016103f1565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805460ff191660ff9490941693909317909255505050565b60006002826040518082805190602001908083835b602083106104875780518252601f199092019160209182019101610468565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16949350505050565b6104c6610582565b151561051c576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60008054600160a060020a0316610597610674565b600160a060020a031614905090565b6105ae610582565b1515610604576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61060d81610678565b50565b60008282018381101561066d576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b600160a060020a03811615156106c25760405160e560020a62461bcd02815260040180806020018281038252602681526020018061072b6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564a165627a7a72305820af62ab6a6419f9ae2b6f651fdde945066bb447ac84d0b4d78c4910cd5199f4220029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009a576000357c010000000000000000000000000000000000000000000000000000000090048063715018a611610078578063715018a6146102295780638da5cb5b146102315780638f32d59b14610255578063f2fde38b146102715761009a565b8063144b763a1461009f57806351a94a5f146100c7578063646986fb1461016d575b600080fd5b6100c5600480360360208110156100b557600080fd5b5035600160a060020a0316610297565b005b6100c5600480360360208110156100dd57600080fd5b8101906020810181356401000000008111156100f857600080fd5b82018360208201111561010a57600080fd5b8035906020019184600183028401116401000000008311171561012c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061031c945050505050565b6102136004803603602081101561018357600080fd5b81019060208101813564010000000081111561019e57600080fd5b8201836020820111156101b057600080fd5b803590602001918460018302840111640100000000831117156101d257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610453945050505050565b6040805160ff9092168252519081900360200190f35b6100c56104be565b610239610573565b60408051600160a060020a039092168252519081900360200190f35b61025d610582565b604080519115158252519081900360200190f35b6100c56004803603602081101561028757600080fd5b5035600160a060020a03166105a6565b61029f610582565b15156102f5576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b3360009081526001602052604090205460ff16151561036f5760405160e560020a62461bcd02815260040180806020018281038252602a815260200180610751602a913960400191505060405180910390fd5b6103de60016002836040518082805190602001908083835b602083106103a65780518252601f199092019160209182019101610387565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff1692915050610610565b6002826040518082805190602001908083835b602083106104105780518252601f1990920191602091820191016103f1565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805460ff191660ff9490941693909317909255505050565b60006002826040518082805190602001908083835b602083106104875780518252601f199092019160209182019101610468565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16949350505050565b6104c6610582565b151561051c576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b60008054600160a060020a0316610597610674565b600160a060020a031614905090565b6105ae610582565b1515610604576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61060d81610678565b50565b60008282018381101561066d576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b600160a060020a03811615156106c25760405160e560020a62461bcd02815260040180806020018281038252602681526020018061072b6026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564a165627a7a72305820af62ab6a6419f9ae2b6f651fdde945066bb447ac84d0b4d78c4910cd5199f4220029",
  "sourceMap": "287:1679:1:-;;;698:17:11;718:12;:10;;;;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:11;-1:-1:-1;;;;;740:18:11;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:11;773:43;;740:6;;773:43;664:159;287:1679:1;;788:96:6;867:10;788:96;:::o;287:1679:1:-;;;;;;;",
  "deployedSourceMap": "287:1679:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:1679:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:115;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1493:115:1;-1:-1:-1;;;;;1493:115:1;;:::i;:::-;;1152:143;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1152:143:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1152:143:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1152:143:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1152:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1152:143:1;;-1:-1:-1;1152:143:1;;-1:-1:-1;;;;;1152:143:1:i;861:118::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;861:118:1;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;861:118:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;861:118:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;861:118:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;861:118:1;;-1:-1:-1;861:118:1;;-1:-1:-1;;;;;861:118:1:i;:::-;;;;;;;;;;;;;;;;;;;1684:137:11;;;:::i;899:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;899:77:11;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;1970:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:11;-1:-1:-1;;;;;1970:107:11;;:::i;1493:115:1:-;1103:9:11;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1567:27:1;;;;;1597:4;1567:27;;;;;;;;:34;;-1:-1:-1;;1567:34:1;;;;;;1493:115::o;1152:143::-;620:10;602:29;;;;:17;:29;;;;;;;;594:84;;;;;;-1:-1:-1;;;;;594:84:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1260:27;1285:1;1260:14;1275:4;1260:20;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1260:20:1;;;;;-1:-1:-1;1260:20:1;;;;;;;;;;;;;;;-1:-1:-1;;1260:24:1;:27::i;:::-;1231:14;1246:4;1231:20;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1231:20:1;;;;;-1:-1:-1;1231:20:1;;;;;;;;;;:57;;-1:-1:-1;;1231:57:1;;;;;;;;;;;;;-1:-1:-1;;;1152:143:1:o;861:118::-;928:5;952:14;967:4;952:20;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;952:20:1;;;;;-1:-1:-1;952:20:1;;;;;;;;;;;;;;861:118;-1:-1:-1;;;;861:118:1:o;1684:137:11:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:11;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;1795:19:11;;;1684:137::o;899:77::-;937:7;963:6;-1:-1:-1;;;;;963:6:11;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:11;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:11;;1306:29;;1250:92;:::o;1970:107::-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;834:176:10:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:10:o;788:96:6:-;867:10;788:96;:::o;2178:225:11:-;-1:-1:-1;;;;;2251:22:11;;;;2243:73;;;;-1:-1:-1;;;;;2243:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:11;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;2379:17:11;-1:-1:-1;;;;;2379:17:11;;;;;;;;;;2178:225::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/// @title Library to implement items that can accumulate evidence\n/// @author Roberto García (http://rhizomik.net/~roberto/)\ncontract Evidencable is Ownable {\n    using SafeMath for uint8;\n\n    mapping(address => bool) private evidenceProviders;\n    mapping(string => uint8) private evidenceCounts;\n\n    /// @dev Modifier controlling that only registered evidence providers are allowed\n    modifier onlyEvidenceProvider() {\n        require(evidenceProviders[msg.sender], \"Only registered evidence providers allowed\");\n        _;\n    }\n\n    /// @notice Get the evidence count for the manifestation with `hash`.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function getEvidenceCount(string memory hash) public view returns (uint8) {\n        return evidenceCounts[hash];\n    }\n\n    /// @notice Adds one to the evidence count for the manifestation with `hash`.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function addEvidence(string memory hash) public onlyEvidenceProvider {\n        evidenceCounts[hash] = uint8(evidenceCounts[hash].add(1));\n    }\n\n    /// @notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n    /// to add evidence.\n    /// @param provider The address of a contract providing evidence\n    function addEvidenceProvider(address provider) public onlyOwner {\n        evidenceProviders[provider] = true;\n    }\n\n    /// @notice Check if the evidencable `hash` has no evidence yet.\n    /// @dev Used to check if the corresponding item evidence count is 0.\n    /// @param hash Hash of the manifestation content, for instance IPFS Base58 Hash\n    function isUnevidenced(string memory hash) internal view returns(bool) {\n        return (evidenceCounts[hash] == 0);\n    }\n}\n",
  "sourcePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
  "ast": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
    "exportedSymbols": {
      "Evidencable": [
        263
      ]
    },
    "id": 264,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 173,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 174,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 1202,
        "src": "34:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 175,
        "nodeType": "ImportDirective",
        "scope": 264,
        "sourceUnit": 1320,
        "src": "94:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 176,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1319,
              "src": "311:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1319",
                "typeString": "contract Ownable"
              }
            },
            "id": 177,
            "nodeType": "InheritanceSpecifier",
            "src": "311:7:1"
          }
        ],
        "contractDependencies": [
          738,
          1319
        ],
        "contractKind": "contract",
        "documentation": "@title Library to implement items that can accumulate evidence\n @author Roberto García (http://rhizomik.net/~roberto/)",
        "fullyImplemented": true,
        "id": 263,
        "linearizedBaseContracts": [
          263,
          1319,
          738
        ],
        "name": "Evidencable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 180,
            "libraryName": {
              "contractScope": null,
              "id": 178,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1201,
              "src": "331:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1201",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "325:25:1",
            "typeName": {
              "id": 179,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "344:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "constant": false,
            "id": 184,
            "name": "evidenceProviders",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "356:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 183,
              "keyType": {
                "id": 181,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "364:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "356:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 182,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "375:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 188,
            "name": "evidenceCounts",
            "nodeType": "VariableDeclaration",
            "scope": 263,
            "src": "412:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
              "typeString": "mapping(string => uint8)"
            },
            "typeName": {
              "id": 187,
              "keyType": {
                "id": 185,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "420:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "412:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
                "typeString": "mapping(string => uint8)"
              },
              "valueType": {
                "id": 186,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "430:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "584:112:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 191,
                          "name": "evidenceProviders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "602:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 194,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1334,
                            "src": "620:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "620:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "602:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "633:44:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        },
                        "value": "Only registered evidence providers allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                          "typeString": "literal_string \"Only registered evidence providers allowed\""
                        }
                      ],
                      "id": 190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1337,
                        1338
                      ],
                      "referencedDeclaration": 1338,
                      "src": "594:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "594:84:1"
                },
                {
                  "id": 198,
                  "nodeType": "PlaceholderStatement",
                  "src": "688:1:1"
                }
              ]
            },
            "documentation": "@dev Modifier controlling that only registered evidence providers are allowed",
            "id": 200,
            "name": "onlyEvidenceProvider",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:2:1"
            },
            "src": "552:144:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "935:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 207,
                      "name": "evidenceCounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "952:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
                        "typeString": "mapping(string memory => uint8)"
                      }
                    },
                    "id": 209,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 208,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "967:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "952:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 206,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "945:27:1"
                }
              ]
            },
            "documentation": "@notice Get the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "887:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "886:20:1"
            },
            "returnParameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "928:5:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:7:1"
            },
            "scope": 263,
            "src": "861:118:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "1221:74:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "evidenceCounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "1231:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
                          "typeString": "mapping(string memory => uint8)"
                        }
                      },
                      "id": 221,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 220,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "1246:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1231:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1285:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 223,
                                "name": "evidenceCounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 188,
                                "src": "1260:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
                                  "typeString": "mapping(string memory => uint8)"
                                }
                              },
                              "id": 225,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 224,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 214,
                                "src": "1275:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1260:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1041,
                            "src": "1260:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1260:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1254:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1254:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1231:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "1231:57:1"
                }
              ]
            },
            "documentation": "@notice Adds one to the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
            "id": 233,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 217,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 216,
                  "name": "onlyEvidenceProvider",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 200,
                  "src": "1200:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1200:20:1"
              }
            ],
            "name": "addEvidence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "1173:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1172:20:1"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:0:1"
            },
            "scope": 263,
            "src": "1152:143:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "1557:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 240,
                        "name": "evidenceProviders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "1567:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 242,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "1585:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1567:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1597:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1567:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:34:1"
                }
              ]
            },
            "documentation": "@notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n to add evidence.\n @param provider The address of a contract providing evidence",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 238,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 237,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1252,
                  "src": "1547:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1547:9:1"
              }
            ],
            "name": "addEvidenceProvider",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "1522:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1521:18:1"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:0:1"
            },
            "scope": 263,
            "src": "1493:115:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "1913:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 254,
                            "name": "evidenceCounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "1931:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint8_$",
                              "typeString": "mapping(string memory => uint8)"
                            }
                          },
                          "id": 256,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "1946:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1931:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1955:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1931:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 259,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1930:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 260,
                  "nodeType": "Return",
                  "src": "1923:34:1"
                }
              ]
            },
            "documentation": "@notice Check if the evidencable `hash` has no evidence yet.\n @dev Used to check if the corresponding item evidence count is 0.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isUnevidenced",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1865:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1864:20:1"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1907:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1906:6:1"
            },
            "scope": 263,
            "src": "1842:122:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 264,
        "src": "287:1679:1"
      }
    ],
    "src": "0:1967:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
      "exportedSymbols": {
        "Evidencable": [
          263
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 173,
        "name": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "attributes": {
          "SourceUnit": 1202,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 264,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 174,
        "name": "ImportDirective",
        "src": "34:59:1"
      },
      {
        "attributes": {
          "SourceUnit": 1320,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 264,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 175,
        "name": "ImportDirective",
        "src": "94:63:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            738,
            1319
          ],
          "contractKind": "contract",
          "documentation": "@title Library to implement items that can accumulate evidence\n @author Roberto García (http://rhizomik.net/~roberto/)",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            263,
            1319,
            738
          ],
          "name": "Evidencable",
          "scope": 264
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 1319,
                  "type": "contract Ownable"
                },
                "id": 176,
                "name": "UserDefinedTypeName",
                "src": "311:7:1"
              }
            ],
            "id": 177,
            "name": "InheritanceSpecifier",
            "src": "311:7:1"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 1201,
                  "type": "library SafeMath"
                },
                "id": 178,
                "name": "UserDefinedTypeName",
                "src": "331:8:1"
              },
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 179,
                "name": "ElementaryTypeName",
                "src": "344:5:1"
              }
            ],
            "id": 180,
            "name": "UsingForDirective",
            "src": "325:25:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "evidenceProviders",
              "scope": 263,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 181,
                    "name": "ElementaryTypeName",
                    "src": "364:7:1"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 182,
                    "name": "ElementaryTypeName",
                    "src": "375:4:1"
                  }
                ],
                "id": 183,
                "name": "Mapping",
                "src": "356:24:1"
              }
            ],
            "id": 184,
            "name": "VariableDeclaration",
            "src": "356:50:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "evidenceCounts",
              "scope": 263,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => uint8)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => uint8)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 185,
                    "name": "ElementaryTypeName",
                    "src": "420:6:1"
                  },
                  {
                    "attributes": {
                      "name": "uint8",
                      "type": "uint8"
                    },
                    "id": 186,
                    "name": "ElementaryTypeName",
                    "src": "430:5:1"
                  }
                ],
                "id": 187,
                "name": "Mapping",
                "src": "412:24:1"
              }
            ],
            "id": 188,
            "name": "VariableDeclaration",
            "src": "412:47:1"
          },
          {
            "attributes": {
              "documentation": "@dev Modifier controlling that only registered evidence providers are allowed",
              "name": "onlyEvidenceProvider",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 189,
                "name": "ParameterList",
                "src": "581:2:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9cb84a229f1c57949a0c01c4f8425b21169b59cdb193b05273899e101296f757",
                                  "typeString": "literal_string \"Only registered evidence providers allowed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1337,
                                1338
                              ],
                              "referencedDeclaration": 1338,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 190,
                            "name": "Identifier",
                            "src": "594:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 184,
                                  "type": "mapping(address => bool)",
                                  "value": "evidenceProviders"
                                },
                                "id": 191,
                                "name": "Identifier",
                                "src": "602:17:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1334,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 192,
                                    "name": "Identifier",
                                    "src": "620:3:1"
                                  }
                                ],
                                "id": 193,
                                "name": "MemberAccess",
                                "src": "620:10:1"
                              }
                            ],
                            "id": 194,
                            "name": "IndexAccess",
                            "src": "602:29:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f6e6c7920726567697374657265642065766964656e63652070726f76696465727320616c6c6f776564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Only registered evidence providers allowed\"",
                              "value": "Only registered evidence providers allowed"
                            },
                            "id": 195,
                            "name": "Literal",
                            "src": "633:44:1"
                          }
                        ],
                        "id": 196,
                        "name": "FunctionCall",
                        "src": "594:84:1"
                      }
                    ],
                    "id": 197,
                    "name": "ExpressionStatement",
                    "src": "594:84:1"
                  },
                  {
                    "id": 198,
                    "name": "PlaceholderStatement",
                    "src": "688:1:1"
                  }
                ],
                "id": 199,
                "name": "Block",
                "src": "584:112:1"
              }
            ],
            "id": 200,
            "name": "ModifierDefinition",
            "src": "552:144:1"
          },
          {
            "attributes": {
              "documentation": "@notice Get the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getEvidenceCount",
              "scope": 263,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "hash",
                      "scope": 212,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 201,
                        "name": "ElementaryTypeName",
                        "src": "887:6:1"
                      }
                    ],
                    "id": 202,
                    "name": "VariableDeclaration",
                    "src": "887:18:1"
                  }
                ],
                "id": 203,
                "name": "ParameterList",
                "src": "886:20:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 212,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 204,
                        "name": "ElementaryTypeName",
                        "src": "928:5:1"
                      }
                    ],
                    "id": 205,
                    "name": "VariableDeclaration",
                    "src": "928:5:1"
                  }
                ],
                "id": 206,
                "name": "ParameterList",
                "src": "927:7:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 206
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint8"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 188,
                              "type": "mapping(string memory => uint8)",
                              "value": "evidenceCounts"
                            },
                            "id": 207,
                            "name": "Identifier",
                            "src": "952:14:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 202,
                              "type": "string memory",
                              "value": "hash"
                            },
                            "id": 208,
                            "name": "Identifier",
                            "src": "967:4:1"
                          }
                        ],
                        "id": 209,
                        "name": "IndexAccess",
                        "src": "952:20:1"
                      }
                    ],
                    "id": 210,
                    "name": "Return",
                    "src": "945:27:1"
                  }
                ],
                "id": 211,
                "name": "Block",
                "src": "935:44:1"
              }
            ],
            "id": 212,
            "name": "FunctionDefinition",
            "src": "861:118:1"
          },
          {
            "attributes": {
              "documentation": "@notice Adds one to the evidence count for the manifestation with `hash`.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addEvidence",
              "scope": 263,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "hash",
                      "scope": 233,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 213,
                        "name": "ElementaryTypeName",
                        "src": "1173:6:1"
                      }
                    ],
                    "id": 214,
                    "name": "VariableDeclaration",
                    "src": "1173:18:1"
                  }
                ],
                "id": 215,
                "name": "ParameterList",
                "src": "1172:20:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 218,
                "name": "ParameterList",
                "src": "1221:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 200,
                      "type": "modifier ()",
                      "value": "onlyEvidenceProvider"
                    },
                    "id": 216,
                    "name": "Identifier",
                    "src": "1200:20:1"
                  }
                ],
                "id": 217,
                "name": "ModifierInvocation",
                "src": "1200:20:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint8"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint8"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 188,
                                  "type": "mapping(string memory => uint8)",
                                  "value": "evidenceCounts"
                                },
                                "id": 219,
                                "name": "Identifier",
                                "src": "1231:14:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 214,
                                  "type": "string memory",
                                  "value": "hash"
                                },
                                "id": 220,
                                "name": "Identifier",
                                "src": "1246:4:1"
                              }
                            ],
                            "id": 221,
                            "name": "IndexAccess",
                            "src": "1231:20:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint8",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint8)",
                                  "value": "uint8"
                                },
                                "id": 222,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1254:5:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "add",
                                      "referencedDeclaration": 1041,
                                      "type": "function (uint256,uint256) pure returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint8"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 188,
                                              "type": "mapping(string memory => uint8)",
                                              "value": "evidenceCounts"
                                            },
                                            "id": 223,
                                            "name": "Identifier",
                                            "src": "1260:14:1"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 214,
                                              "type": "string memory",
                                              "value": "hash"
                                            },
                                            "id": 224,
                                            "name": "Identifier",
                                            "src": "1275:4:1"
                                          }
                                        ],
                                        "id": 225,
                                        "name": "IndexAccess",
                                        "src": "1260:20:1"
                                      }
                                    ],
                                    "id": 226,
                                    "name": "MemberAccess",
                                    "src": "1260:24:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 1",
                                      "value": "1"
                                    },
                                    "id": 227,
                                    "name": "Literal",
                                    "src": "1285:1:1"
                                  }
                                ],
                                "id": 228,
                                "name": "FunctionCall",
                                "src": "1260:27:1"
                              }
                            ],
                            "id": 229,
                            "name": "FunctionCall",
                            "src": "1254:34:1"
                          }
                        ],
                        "id": 230,
                        "name": "Assignment",
                        "src": "1231:57:1"
                      }
                    ],
                    "id": 231,
                    "name": "ExpressionStatement",
                    "src": "1231:57:1"
                  }
                ],
                "id": 232,
                "name": "Block",
                "src": "1221:74:1"
              }
            ],
            "id": 233,
            "name": "FunctionDefinition",
            "src": "1152:143:1"
          },
          {
            "attributes": {
              "documentation": "@notice Adds an evidence provider `provider` contract that can then call addEvidence(...)\n to add evidence.\n @param provider The address of a contract providing evidence",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addEvidenceProvider",
              "scope": 263,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "provider",
                      "scope": 247,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 234,
                        "name": "ElementaryTypeName",
                        "src": "1522:7:1"
                      }
                    ],
                    "id": 235,
                    "name": "VariableDeclaration",
                    "src": "1522:16:1"
                  }
                ],
                "id": 236,
                "name": "ParameterList",
                "src": "1521:18:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 239,
                "name": "ParameterList",
                "src": "1557:0:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1252,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 237,
                    "name": "Identifier",
                    "src": "1547:9:1"
                  }
                ],
                "id": 238,
                "name": "ModifierInvocation",
                "src": "1547:9:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 184,
                                  "type": "mapping(address => bool)",
                                  "value": "evidenceProviders"
                                },
                                "id": 240,
                                "name": "Identifier",
                                "src": "1567:17:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 235,
                                  "type": "address",
                                  "value": "provider"
                                },
                                "id": 241,
                                "name": "Identifier",
                                "src": "1585:8:1"
                              }
                            ],
                            "id": 242,
                            "name": "IndexAccess",
                            "src": "1567:27:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 243,
                            "name": "Literal",
                            "src": "1597:4:1"
                          }
                        ],
                        "id": 244,
                        "name": "Assignment",
                        "src": "1567:34:1"
                      }
                    ],
                    "id": 245,
                    "name": "ExpressionStatement",
                    "src": "1567:34:1"
                  }
                ],
                "id": 246,
                "name": "Block",
                "src": "1557:51:1"
              }
            ],
            "id": 247,
            "name": "FunctionDefinition",
            "src": "1493:115:1"
          },
          {
            "attributes": {
              "documentation": "@notice Check if the evidencable `hash` has no evidence yet.\n @dev Used to check if the corresponding item evidence count is 0.\n @param hash Hash of the manifestation content, for instance IPFS Base58 Hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "isUnevidenced",
              "scope": 263,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "hash",
                      "scope": 262,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 248,
                        "name": "ElementaryTypeName",
                        "src": "1865:6:1"
                      }
                    ],
                    "id": 249,
                    "name": "VariableDeclaration",
                    "src": "1865:18:1"
                  }
                ],
                "id": 250,
                "name": "ParameterList",
                "src": "1864:20:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 262,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 251,
                        "name": "ElementaryTypeName",
                        "src": "1907:4:1"
                      }
                    ],
                    "id": 252,
                    "name": "VariableDeclaration",
                    "src": "1907:4:1"
                  }
                ],
                "id": 253,
                "name": "ParameterList",
                "src": "1906:6:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 253
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint8"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 188,
                                      "type": "mapping(string memory => uint8)",
                                      "value": "evidenceCounts"
                                    },
                                    "id": 254,
                                    "name": "Identifier",
                                    "src": "1931:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 249,
                                      "type": "string memory",
                                      "value": "hash"
                                    },
                                    "id": 255,
                                    "name": "Identifier",
                                    "src": "1946:4:1"
                                  }
                                ],
                                "id": 256,
                                "name": "IndexAccess",
                                "src": "1931:20:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 257,
                                "name": "Literal",
                                "src": "1955:1:1"
                              }
                            ],
                            "id": 258,
                            "name": "BinaryOperation",
                            "src": "1931:25:1"
                          }
                        ],
                        "id": 259,
                        "name": "TupleExpression",
                        "src": "1930:27:1"
                      }
                    ],
                    "id": 260,
                    "name": "Return",
                    "src": "1923:34:1"
                  }
                ],
                "id": 261,
                "name": "Block",
                "src": "1913:51:1"
              }
            ],
            "id": 262,
            "name": "FunctionDefinition",
            "src": "1842:122:1"
          }
        ],
        "id": 263,
        "name": "ContractDefinition",
        "src": "287:1679:1"
      }
    ],
    "id": 264,
    "name": "SourceUnit",
    "src": "0:1967:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-05T16:42:41.658Z",
  "devdoc": {
    "author": "Roberto García (http://rhizomik.net/~roberto/)",
    "methods": {
      "addEvidence(string)": {
        "params": {
          "hash": "Hash of the manifestation content, for instance IPFS Base58 Hash"
        }
      },
      "addEvidenceProvider(address)": {
        "params": {
          "provider": "The address of a contract providing evidence"
        }
      },
      "getEvidenceCount(string)": {
        "params": {
          "hash": "Hash of the manifestation content, for instance IPFS Base58 Hash"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Library to implement items that can accumulate evidence"
  },
  "userdoc": {
    "methods": {
      "addEvidence(string)": {
        "notice": "Adds one to the evidence count for the manifestation with `hash`."
      },
      "addEvidenceProvider(address)": {
        "notice": "Adds an evidence provider `provider` contract that can then call addEvidence(...) to add evidence."
      },
      "getEvidenceCount(string)": {
        "notice": "Get the evidence count for the manifestation with `hash`."
      }
    }
  }
}