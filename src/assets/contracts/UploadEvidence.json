{
  "contractName": "UploadEvidence",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registry",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "evidencedIdHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "evidencedHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "evidenceHash",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "evidencer",
          "type": "address"
        }
      ],
      "name": "UploadEvidenceEvent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "evidenceHash",
          "type": "string"
        }
      ],
      "name": "getEvidenceExistence",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registry",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "evidencedHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "evidenceHash",
          "type": "string"
        }
      ],
      "name": "addEvidence",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"evidencedIdHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"evidencedHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"evidenceHash\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"evidencer\",\"type\":\"address\"}],\"name\":\"UploadEvidenceEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"evidencedHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"evidenceHash\",\"type\":\"string\"}],\"name\":\"addEvidence\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"evidenceHash\",\"type\":\"string\"}],\"name\":\"getEvidenceExistence\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roberto Garc\\u00eda (http://rhizomik.net/~roberto/)\",\"kind\":\"dev\",\"methods\":{\"addEvidence(address,string,string)\":{\"details\":\"The address of the registry containing the evidenced item is required to update its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events. Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\",\"params\":{\"evidenceHash\":\"Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash\",\"evidencedHash\":\"Hash used by the registry contract to identify the item receiving evidence\",\"registry\":\"The address of the contract holding the items evidenced\"}},\"getEvidenceExistence(string)\":{\"params\":{\"evidenceHash\":\"Hash of the evidence content, for instance IPFS Base58 Hash\"}}},\"title\":\"Contract to register evidence based on uploading content to IPFS\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEvidence(address,string,string)\":{\"notice\":\"Add evidence for item in `registry` identified by `evidencedHash`. The evidence has `evidenceHash` and is registered by `msg.sender`.\"},\"getEvidenceExistence(string)\":{\"notice\":\"Get if the evidence with content hash `evidenceHash` is already registered.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol\":\"UploadEvidence\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":{\"keccak256\":\"0x8da32bbbaad50226889a8114299ea2ada47347f6d071e4b902a3c7ab6cfa570c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4fc1530e99678887f3047bfd648125326972e4db7441834693a07eb6f44ebaab\",\"dweb:/ipfs/QmVgsrQQiR3ohd4CfRQxkGvxA1yTn7ubqj6ghtqqXTDpsV\"]},\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol\":{\"keccak256\":\"0x1658e23f3ab7b460e436a2d327bcceeceecf46eb5a46ec51a7e47a5bc1c0bc5f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e70c360a20bb56a8748d3b27278a759d8ceaed27347b868abf8757561c98f1b\",\"dweb:/ipfs/QmYjog6JMRTVyp4DUQMsE4TNj3dDBz4wdPKmT7mXpEN7iy\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061047a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369291ed01461003b5780637a079d3114610050575b600080fd5b61004e6100493660046102af565b610077565b005b61006361005e366004610331565b6101f8565b604051901515815260200160405180910390f35b600081604051610087919061039a565b9081526040519081900360200190205460ff16156100fc5760405162461bcd60e51b815260206004820152602860248201527f5468652065766964656e636520686173206265656e20616c726561647920726560448201526719da5cdd195c995960c21b606482015260840160405180910390fd5b6040516351a94a5f60e01b81526001600160a01b038416906351a94a5f906101289085906004016103b6565b600060405180830381600087803b15801561014257600080fd5b505af1158015610156573d6000803e3d6000fd5b50505050600160008260405161016c919061039a565b90815260405160209181900382018120805460ff191693151593909317909255339161019a9185910161039a565b60405160208183030381529060405280519060200120846001600160a01b03167fef770c44903f5442a75715546b206c07d84ab410a5436d70c0e65297caaff3ca85856040516101eb9291906103d0565b60405180910390a4505050565b60008082604051610209919061039a565b9081526040519081900360200190205460ff1692915050565b600082601f83011261023357600080fd5b813567ffffffffffffffff8082111561024e5761024e61042e565b604051601f8301601f19908116603f011681019082821181831017156102765761027661042e565b8160405283815286602085880101111561028f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102c457600080fd5b83356001600160a01b03811681146102db57600080fd5b9250602084013567ffffffffffffffff808211156102f857600080fd5b61030487838801610222565b9350604086013591508082111561031a57600080fd5b5061032786828701610222565b9150509250925092565b60006020828403121561034357600080fd5b813567ffffffffffffffff81111561035a57600080fd5b61036684828501610222565b949350505050565b600081518084526103868160208601602086016103fe565b601f01601f19169290920160200192915050565b600082516103ac8184602087016103fe565b9190910192915050565b6020815260006103c9602083018461036e565b9392505050565b6040815260006103e3604083018561036e565b82810360208401526103f5818561036e565b95945050505050565b60005b83811015610419578181015183820152602001610401565b83811115610428576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220faa17847e366ea6d2a890ab3eaa8bd9a18b73366f47b42178b478fb34231d98c64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806369291ed01461003b5780637a079d3114610050575b600080fd5b61004e6100493660046102af565b610077565b005b61006361005e366004610331565b6101f8565b604051901515815260200160405180910390f35b600081604051610087919061039a565b9081526040519081900360200190205460ff16156100fc5760405162461bcd60e51b815260206004820152602860248201527f5468652065766964656e636520686173206265656e20616c726561647920726560448201526719da5cdd195c995960c21b606482015260840160405180910390fd5b6040516351a94a5f60e01b81526001600160a01b038416906351a94a5f906101289085906004016103b6565b600060405180830381600087803b15801561014257600080fd5b505af1158015610156573d6000803e3d6000fd5b50505050600160008260405161016c919061039a565b90815260405160209181900382018120805460ff191693151593909317909255339161019a9185910161039a565b60405160208183030381529060405280519060200120846001600160a01b03167fef770c44903f5442a75715546b206c07d84ab410a5436d70c0e65297caaff3ca85856040516101eb9291906103d0565b60405180910390a4505050565b60008082604051610209919061039a565b9081526040519081900360200190205460ff1692915050565b600082601f83011261023357600080fd5b813567ffffffffffffffff8082111561024e5761024e61042e565b604051601f8301601f19908116603f011681019082821181831017156102765761027661042e565b8160405283815286602085880101111561028f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102c457600080fd5b83356001600160a01b03811681146102db57600080fd5b9250602084013567ffffffffffffffff808211156102f857600080fd5b61030487838801610222565b9350604086013591508082111561031a57600080fd5b5061032786828701610222565b9150509250925092565b60006020828403121561034357600080fd5b813567ffffffffffffffff81111561035a57600080fd5b61036684828501610222565b949350505050565b600081518084526103868160208601602086016103fe565b601f01601f19169290920160200192915050565b600082516103ac8184602087016103fe565b9190910192915050565b6020815260006103c9602083018461036e565b9392505050565b6040815260006103e3604083018561036e565b82810360208401526103f5818561036e565b95945050505050565b60005b83811015610419578181015183820152602001610401565b83811115610428576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220faa17847e366ea6d2a890ab3eaa8bd9a18b73366f47b42178b478fb34231d98c64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3937:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:666:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "116:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "125:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "128:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "118:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "118:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "118:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "95:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "103:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "91:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "91:17:10"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "110:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "87:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "77:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "141:30:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "164:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "151:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "151:20:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "145:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:28:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "190:18:10",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "184:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "231:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "233:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "233:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "233:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "223:2:10"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "220:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:10:10"
                  },
                  "nodeType": "YulIf",
                  "src": "217:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "262:17:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "276:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "272:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "272:7:10"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "266:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "288:23:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "302:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:9:10"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "292:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "320:71:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "342:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "366:2:10"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "370:4:10",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "362:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "362:13:10"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:22:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "382:2:10",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "354:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "354:31:10"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "387:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "350:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:40:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "338:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:53:10"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "324:10:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "450:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "452:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "452:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "452:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "409:10:10"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "421:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "406:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "406:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "429:10:10"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "441:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "426:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "403:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:46:10"
                  },
                  "nodeType": "YulIf",
                  "src": "400:2:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:2:10",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "492:10:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:22:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "481:22:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "519:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "527:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "512:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:18:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "512:18:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "578:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "587:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "580:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "580:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "580:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:10"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "561:2:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "549:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "549:15:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "566:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:26:10"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "573:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "542:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "539:2:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "620:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "628:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "616:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "639:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "647:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "635:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "635:17:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "654:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "603:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:54:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "681:6:10"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "689:2:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "677:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "677:15:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "694:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "673:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "673:26:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "701:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:37:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "712:15:10",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "721:6:10"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "712:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "41:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "49:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "57:5:10",
                "type": ""
              }
            ],
            "src": "14:719:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "862:593:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "908:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "917:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "920:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "910:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "910:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "910:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "883:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "892:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "879:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "879:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "904:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "875:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "875:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "872:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "933:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "959:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "946:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "937:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1032:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1041:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1044:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1034:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1034:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1034:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "991:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1002:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1017:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1022:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1013:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1013:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1026:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1009:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1009:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "998:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "998:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "988:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "988:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "981:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "981:50:10"
                  },
                  "nodeType": "YulIf",
                  "src": "978:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1057:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1067:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1057:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1081:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1112:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1123:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1108:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1108:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1095:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1095:32:10"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1085:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1136:28:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1146:18:10",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1140:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1191:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1200:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1203:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1193:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1193:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1179:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1187:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1176:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1176:14:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1173:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1216:60:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1248:9:10"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1259:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:22:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1268:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1226:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:50:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1216:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1285:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1318:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1329:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1314:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1301:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:32:10"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1289:8:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1362:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1371:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1364:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1364:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1364:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1348:8:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1358:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1345:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1345:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1342:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1387:62:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1419:9:10"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1430:8:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1415:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:24:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1441:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1397:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1397:52:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "812:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "823:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "835:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "843:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "851:6:10",
                "type": ""
              }
            ],
            "src": "738:717:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1540:242:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1586:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1595:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1598:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1588:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1588:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1588:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1561:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1570:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1557:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1557:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1582:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1553:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1553:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1550:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1611:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1625:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1625:23:10"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1615:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1691:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1700:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1703:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1693:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1693:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1693:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1663:6:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:18:10",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1660:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1660:30:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1657:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1716:60:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1748:9:10"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1759:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1744:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1744:22:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1768:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1726:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:50:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1506:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1517:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1529:6:10",
                "type": ""
              }
            ],
            "src": "1460:322:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1837:208:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1847:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1867:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1861:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1861:12:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1851:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1889:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1894:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1882:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1882:19:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1936:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1943:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:16:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1954:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1959:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1950:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1950:14:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1966:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1910:21:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:63:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:63:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1982:57:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1997:3:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2010:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2018:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2006:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2006:15:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2027:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2023:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2023:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2002:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2002:29:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1993:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1993:39:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2034:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1989:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:50:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1982:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1814:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1821:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1829:3:10",
                "type": ""
              }
            ],
            "src": "1787:258:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:137:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2199:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2219:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2213:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2203:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2261:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2269:4:10",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2257:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2257:17:10"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2276:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2281:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2235:21:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:53:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2235:53:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2297:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2308:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2313:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2304:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2304:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2297:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2165:3:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2170:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2181:3:10",
                "type": ""
              }
            ],
            "src": "2050:276:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2426:92:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2436:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2448:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2459:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2444:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2436:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2478:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2503:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2496:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2496:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2489:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2471:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2471:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2471:41:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2395:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2406:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2417:4:10",
                "type": ""
              }
            ],
            "src": "2331:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2644:99:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2661:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2672:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2654:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2654:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2654:21:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2684:53:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2710:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2722:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2733:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2718:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2692:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2692:45:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2684:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2613:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2624:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2635:4:10",
                "type": ""
              }
            ],
            "src": "2523:220:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2917:214:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2934:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2945:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2927:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2927:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2927:21:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2957:59:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2989:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3001:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3012:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2997:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2997:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2971:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2971:45:10"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2961:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3036:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3047:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3032:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3032:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "3056:6:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3064:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3052:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3052:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3025:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3025:50:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3025:50:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3084:41:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3110:6:10"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3118:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3092:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3092:33:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3084:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2878:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2889:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2897:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2908:4:10",
                "type": ""
              }
            ],
            "src": "2748:383:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3310:230:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3327:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3338:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3320:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3320:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3320:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3361:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3372:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3357:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3357:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3377:2:10",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3350:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3350:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3400:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3411:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:18:10"
                      },
                      {
                        "hexValue": "5468652065766964656e636520686173206265656e20616c7265616479207265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3416:34:10",
                        "type": "",
                        "value": "The evidence has been already re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3389:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3389:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3389:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3471:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3482:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3467:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3467:18:10"
                      },
                      {
                        "hexValue": "6769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3487:10:10",
                        "type": "",
                        "value": "gistered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3460:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3460:38:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3507:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3519:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3530:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3515:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3515:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3507:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3287:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3301:4:10",
                "type": ""
              }
            ],
            "src": "3136:404:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3598:205:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3608:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3617:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3612:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3677:63:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3707:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3698:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3698:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3721:3:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3726:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3717:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3717:11:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3711:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3711:18:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3691:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3691:39:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3691:39:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3638:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3641:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3635:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3635:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3649:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3651:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3660:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3663:2:10",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3656:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3656:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3651:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3631:3:10",
                    "statements": []
                  },
                  "src": "3627:113:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3766:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3779:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3784:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3775:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3775:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3793:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3768:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3768:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3768:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3755:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3758:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3752:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3749:2:10"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3576:3:10",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3581:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3586:6:10",
                "type": ""
              }
            ],
            "src": "3545:258:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3840:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3857:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3864:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3869:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3860:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3860:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3850:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3850:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3897:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3900:4:10",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3921:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3924:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3914:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3914:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3914:15:10"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "3808:127:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"The evidence has been already re\")\n        mstore(add(headStart, 96), \"gistered\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "236:1860:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "236:1860:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:450;;;;;;:::i;:::-;;:::i;:::-;;754:139;;;;;;:::i;:::-;;:::i;:::-;;;2496:14:10;;2489:22;2471:41;;2459:2;2444:18;754:139:5;;;;;;;1644:450;1766:16;1783:12;1766:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1765:31;1757:84;;;;-1:-1:-1;;;1757:84:5;;3338:2:10;1757:84:5;;;3320:21:10;3377:2;3357:18;;;3350:30;3416:34;3396:18;;;3389:62;-1:-1:-1;;;3467:18:10;;;3460:38;3515:19;;1757:84:5;;;;;;;;1851:48;;-1:-1:-1;;;1851:48:5;;-1:-1:-1;;;;;1851:33:5;;;;;:48;;1885:13;;1851:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1942:4;1909:16;1926:12;1909:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;:37;;-1:-1:-1;;1909:37:5;;;;;;;;;;;2076:10;;2001:31;;2018:13;;2001:31;;:::i;:::-;;;;;;;;;;;;;1991:42;;;;;;1981:8;-1:-1:-1;;;;;1961:126:5;;2047:13;2062:12;1961:126;;;;;;;:::i;:::-;;;;;;;;1644:450;;;:::o;754:139::-;833:4;856:16;873:12;856:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;754:139;-1:-1:-1;;754:139:5:o;14:719:10:-;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;128:1;125;118:12;77:2;164:6;151:20;190:18;227:2;223;220:10;217:2;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:10;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:2;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:2;;;590:1;587;580:12;539:2;654;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;67:666;;;;:::o;738:717::-;835:6;843;851;904:2;892:9;883:7;879:23;875:32;872:2;;;920:1;917;910:12;872:2;946:23;;-1:-1:-1;;;;;998:31:10;;988:42;;978:2;;1044:1;1041;1034:12;978:2;1067:5;-1:-1:-1;1123:2:10;1108:18;;1095:32;1146:18;1176:14;;;1173:2;;;1203:1;1200;1193:12;1173:2;1226:50;1268:7;1259:6;1248:9;1244:22;1226:50;:::i;:::-;1216:60;;1329:2;1318:9;1314:18;1301:32;1285:48;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:52;1441:7;1430:8;1419:9;1415:24;1397:52;:::i;:::-;1387:62;;;862:593;;;;;:::o;1460:322::-;1529:6;1582:2;1570:9;1561:7;1557:23;1553:32;1550:2;;;1598:1;1595;1588:12;1550:2;1638:9;1625:23;1671:18;1663:6;1660:30;1657:2;;;1703:1;1700;1693:12;1657:2;1726:50;1768:7;1759:6;1748:9;1744:22;1726:50;:::i;:::-;1716:60;1540:242;-1:-1:-1;;;;1540:242:10:o;1787:258::-;1829:3;1867:5;1861:12;1894:6;1889:3;1882:19;1910:63;1966:6;1959:4;1954:3;1950:14;1943:4;1936:5;1932:16;1910:63;:::i;:::-;2027:2;2006:15;-1:-1:-1;;2002:29:10;1993:39;;;;2034:4;1989:50;;1837:208;-1:-1:-1;;1837:208:10:o;2050:276::-;2181:3;2219:6;2213:13;2235:53;2281:6;2276:3;2269:4;2261:6;2257:17;2235:53;:::i;:::-;2304:16;;;;;2189:137;-1:-1:-1;;2189:137:10:o;2523:220::-;2672:2;2661:9;2654:21;2635:4;2692:45;2733:2;2722:9;2718:18;2710:6;2692:45;:::i;:::-;2684:53;2644:99;-1:-1:-1;;;2644:99:10:o;2748:383::-;2945:2;2934:9;2927:21;2908:4;2971:45;3012:2;3001:9;2997:18;2989:6;2971:45;:::i;:::-;3064:9;3056:6;3052:22;3047:2;3036:9;3032:18;3025:50;3092:33;3118:6;3110;3092:33;:::i;:::-;3084:41;2917:214;-1:-1:-1;;;;;2917:214:10:o;3545:258::-;3617:1;3627:113;3641:6;3638:1;3635:13;3627:113;;;3717:11;;;3711:18;3698:11;;;3691:39;3663:2;3656:10;3627:113;;;3758:6;3755:1;3752:13;3749:2;;;3793:1;3784:6;3779:3;3775:16;3768:27;3749:2;;3598:205;;;:::o;3808:127::-;3869:10;3864:3;3860:20;3857:1;3850:31;3900:4;3897:1;3890:15;3924:4;3921:1;3914:15",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.6;\n\nimport \"./Evidencable.sol\";\n\n/// @title Contract to register evidence based on uploading content to IPFS\n/// @author Roberto García (http://rhizomik.net/~roberto/)\ncontract UploadEvidence {\n\n    /// @notice Allows checking if some content has already been used as evidence.\n    mapping(string => bool) private existingEvidence;\n\n    event UploadEvidenceEvent(address indexed registry, bytes32 indexed evidencedIdHash,\n        string evidencedHash, string evidenceHash, address indexed evidencer);\n\n    /// @notice Get if the evidence with content hash `evidenceHash` is already registered.\n    /// @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash\n    function getEvidenceExistence(string memory evidenceHash) public view returns (bool) {\n        return existingEvidence[evidenceHash];\n    }\n\n    /// @notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n    /// has `evidenceHash` and is registered by `msg.sender`.\n    /// @dev The address of the registry containing the evidenced item is required to update\n    /// its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n    /// Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n    /// @param registry The address of the contract holding the items evidenced\n    /// @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n    /// @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash\n    function addEvidence(address registry, string memory evidencedHash, string memory evidenceHash) public {\n        require(!existingEvidence[evidenceHash], \"The evidence has been already registered\");\n        Evidencable(registry).addEvidence(evidencedHash);\n        existingEvidence[evidenceHash] = true;\n        emit UploadEvidenceEvent(registry, keccak256(abi.encodePacked(evidencedHash)),\n            evidencedHash, evidenceHash, msg.sender);\n    }\n}\n",
  "sourcePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
  "ast": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
    "exportedSymbols": {
      "Context": [
        1000
      ],
      "Evidencable": [
        276
      ],
      "Ownable": [
        885
      ],
      "SafeMath": [
        1312
      ],
      "UploadEvidence": [
        775
      ]
    },
    "id": 776,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 696,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:5"
      },
      {
        "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
        "file": "./Evidencable.sol",
        "id": 697,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 776,
        "sourceUnit": 277,
        "src": "71:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 698,
          "nodeType": "StructuredDocumentation",
          "src": "100:136:5",
          "text": "@title Contract to register evidence based on uploading content to IPFS\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 775,
        "linearizedBaseContracts": [
          775
        ],
        "name": "UploadEvidence",
        "nameLocation": "245:14:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "267:78:5",
              "text": "@notice Allows checking if some content has already been used as evidence."
            },
            "id": 703,
            "mutability": "mutable",
            "name": "existingEvidence",
            "nameLocation": "382:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "350:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 702,
              "keyType": {
                "id": 700,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "358:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "350:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 701,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 715,
            "name": "UploadEvidenceEvent",
            "nameLocation": "411:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "registry",
                  "nameLocation": "447:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "431:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "evidencedIdHash",
                  "nameLocation": "473:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "457:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "evidencedHash",
                  "nameLocation": "505:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "498:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "527:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "520:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "evidencer",
                  "nameLocation": "557:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "541:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:137:5"
            },
            "src": "405:163:5"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "839:54:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 723,
                      "name": "existingEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "856:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 725,
                    "indexExpression": {
                      "id": 724,
                      "name": "evidenceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "873:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "856:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 722,
                  "id": 726,
                  "nodeType": "Return",
                  "src": "849:37:5"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "574:175:5",
              "text": "@notice Get if the evidence with content hash `evidenceHash` is already registered.\n @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "7a079d31",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceExistence",
            "nameLocation": "763:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "798:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "784:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:28:5"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "833:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:6:5"
            },
            "scope": 775,
            "src": "754:139:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "1747:347:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1765:31:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 739,
                            "name": "existingEvidence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "1766:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 741,
                          "indexExpression": {
                            "id": 740,
                            "name": "evidenceHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "1783:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1766:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        },
                        "value": "The evidence has been already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1757:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1885:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "1863:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 746,
                          "name": "Evidencable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "1851:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Evidencable_$276_$",
                            "typeString": "type(contract Evidencable)"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1851:21:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Evidencable_$276",
                          "typeString": "contract Evidencable"
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addEvidence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 244,
                      "src": "1851:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:48:5"
                },
                {
                  "expression": {
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 753,
                        "name": "existingEvidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "1909:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 755,
                      "indexExpression": {
                        "id": 754,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "1926:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1909:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1942:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1909:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1981:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 764,
                                "name": "evidencedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "2018:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 762,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "2001:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2001:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2001:31:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 761,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "1991:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:42:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 767,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "2047:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 768,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "2062:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2076:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2076:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 759,
                      "name": "UploadEvidenceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "1961:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,string memory,string memory,address)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "EmitStatement",
                  "src": "1956:131:5"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "899:740:5",
              "text": "@notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n has `evidenceHash` and is registered by `msg.sender`.\n @dev The address of the registry containing the evidenced item is required to update\n its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n @param registry The address of the contract holding the items evidenced\n @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash"
            },
            "functionSelector": "69291ed0",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEvidence",
            "nameLocation": "1653:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "registry",
                  "nameLocation": "1673:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1665:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "evidencedHash",
                  "nameLocation": "1697:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1683:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "1726:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1712:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1664:75:5"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:5"
            },
            "scope": 775,
            "src": "1644:450:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 776,
        "src": "236:1860:5",
        "usedErrors": []
      }
    ],
    "src": "46:2051:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
    "exportedSymbols": {
      "Context": [
        1000
      ],
      "Evidencable": [
        276
      ],
      "Ownable": [
        885
      ],
      "SafeMath": [
        1312
      ],
      "UploadEvidence": [
        775
      ]
    },
    "id": 776,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 696,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:5"
      },
      {
        "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
        "file": "./Evidencable.sol",
        "id": 697,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 776,
        "sourceUnit": 277,
        "src": "71:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 698,
          "nodeType": "StructuredDocumentation",
          "src": "100:136:5",
          "text": "@title Contract to register evidence based on uploading content to IPFS\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 775,
        "linearizedBaseContracts": [
          775
        ],
        "name": "UploadEvidence",
        "nameLocation": "245:14:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 699,
              "nodeType": "StructuredDocumentation",
              "src": "267:78:5",
              "text": "@notice Allows checking if some content has already been used as evidence."
            },
            "id": 703,
            "mutability": "mutable",
            "name": "existingEvidence",
            "nameLocation": "382:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 775,
            "src": "350:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 702,
              "keyType": {
                "id": 700,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "358:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "350:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 701,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "368:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 715,
            "name": "UploadEvidenceEvent",
            "nameLocation": "411:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "registry",
                  "nameLocation": "447:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "431:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 707,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "evidencedIdHash",
                  "nameLocation": "473:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "457:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "evidencedHash",
                  "nameLocation": "505:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "498:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "527:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "520:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "evidencer",
                  "nameLocation": "557:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "541:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:137:5"
            },
            "src": "405:163:5"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "839:54:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 723,
                      "name": "existingEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "856:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 725,
                    "indexExpression": {
                      "id": 724,
                      "name": "evidenceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "873:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "856:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 722,
                  "id": 726,
                  "nodeType": "Return",
                  "src": "849:37:5"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "574:175:5",
              "text": "@notice Get if the evidence with content hash `evidenceHash` is already registered.\n @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash"
            },
            "functionSelector": "7a079d31",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceExistence",
            "nameLocation": "763:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "798:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "784:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:28:5"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "833:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:6:5"
            },
            "scope": 775,
            "src": "754:139:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "1747:347:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1765:31:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 739,
                            "name": "existingEvidence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "1766:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 741,
                          "indexExpression": {
                            "id": 740,
                            "name": "evidenceHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "1783:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1766:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        },
                        "value": "The evidence has been already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        }
                      ],
                      "id": 738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1757:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1757:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:84:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 750,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "1885:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 747,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "1863:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 746,
                          "name": "Evidencable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "1851:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Evidencable_$276_$",
                            "typeString": "type(contract Evidencable)"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1851:21:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Evidencable_$276",
                          "typeString": "contract Evidencable"
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addEvidence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 244,
                      "src": "1851:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:48:5"
                },
                {
                  "expression": {
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 753,
                        "name": "existingEvidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "1909:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 755,
                      "indexExpression": {
                        "id": 754,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "1926:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1909:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1942:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1909:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "1909:37:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 760,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "1981:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 764,
                                "name": "evidencedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 733,
                                "src": "2018:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 762,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "2001:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2001:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2001:31:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 761,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "1991:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1991:42:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 767,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 733,
                        "src": "2047:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 768,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 735,
                        "src": "2062:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2076:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2076:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 759,
                      "name": "UploadEvidenceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "1961:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,string memory,string memory,address)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "EmitStatement",
                  "src": "1956:131:5"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "899:740:5",
              "text": "@notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n has `evidenceHash` and is registered by `msg.sender`.\n @dev The address of the registry containing the evidenced item is required to update\n its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n @param registry The address of the contract holding the items evidenced\n @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash"
            },
            "functionSelector": "69291ed0",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEvidence",
            "nameLocation": "1653:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "registry",
                  "nameLocation": "1673:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1665:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "evidencedHash",
                  "nameLocation": "1697:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1683:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "evidenceHash",
                  "nameLocation": "1726:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "1712:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1664:75:5"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1747:0:5"
            },
            "scope": 775,
            "src": "1644:450:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 776,
        "src": "236:1860:5",
        "usedErrors": []
      }
    ],
    "src": "46:2051:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xaB3F62eA71735B557C79877a343E7F1689868E23",
      "transactionHash": "0x55f4ee798ce8df0fd68f50aa30f57a344bd73066b341a22c8fadea394ac2178d"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-30T19:44:43.382Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Roberto García (http://rhizomik.net/~roberto/)",
    "kind": "dev",
    "methods": {
      "addEvidence(address,string,string)": {
        "details": "The address of the registry containing the evidenced item is required to update its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events. Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.",
        "params": {
          "evidenceHash": "Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash",
          "evidencedHash": "Hash used by the registry contract to identify the item receiving evidence",
          "registry": "The address of the contract holding the items evidenced"
        }
      },
      "getEvidenceExistence(string)": {
        "params": {
          "evidenceHash": "Hash of the evidence content, for instance IPFS Base58 Hash"
        }
      }
    },
    "title": "Contract to register evidence based on uploading content to IPFS",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addEvidence(address,string,string)": {
        "notice": "Add evidence for item in `registry` identified by `evidencedHash`. The evidence has `evidenceHash` and is registered by `msg.sender`."
      },
      "getEvidenceExistence(string)": {
        "notice": "Get if the evidence with content hash `evidenceHash` is already registered."
      }
    },
    "version": 1
  }
}
