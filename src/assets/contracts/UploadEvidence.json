{
  "contractName": "UploadEvidence",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "registry",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "evidencedIdHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "evidencedHash",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "evidenceHash",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "evidencer",
          "type": "address"
        }
      ],
      "name": "UploadEvidenceEvent",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "evidenceHash",
          "type": "string"
        }
      ],
      "name": "getEvidenceExistence",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "registry",
          "type": "address"
        },
        {
          "name": "evidencedHash",
          "type": "string"
        },
        {
          "name": "evidenceHash",
          "type": "string"
        }
      ],
      "name": "addEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"registry\",\"type\":\"address\"},{\"name\":\"evidencedHash\",\"type\":\"string\"},{\"name\":\"evidenceHash\",\"type\":\"string\"}],\"name\":\"addEvidence\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"evidenceHash\",\"type\":\"string\"}],\"name\":\"getEvidenceExistence\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"registry\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"evidencedIdHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"evidencedHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"evidenceHash\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"evidencer\",\"type\":\"address\"}],\"name\":\"UploadEvidenceEvent\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Roberto Garc\\u00eda (http://rhizomik.net/~roberto/)\",\"methods\":{\"addEvidence(address,string,string)\":{\"details\":\"The address of the registry containing the evidenced item is required to update its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events. Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\",\"params\":{\"evidenceHash\":\"Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash\",\"evidencedHash\":\"Hash used by the registry contract to identify the item receiving evidence\",\"registry\":\"The address of the contract holding the items evidenced\"}},\"getEvidenceExistence(string)\":{\"params\":{\"evidenceHash\":\"Hash of the evidence content, for instance IPFS Base58 Hash\"}}},\"title\":\"Contract to register evidence based on uploading content to IPFS\"},\"userdoc\":{\"methods\":{\"addEvidence(address,string,string)\":{\"notice\":\"Add evidence for item in `registry` identified by `evidencedHash`. The evidence has `evidenceHash` and is registered by `msg.sender`.\"},\"getEvidenceExistence(string)\":{\"notice\":\"Get if the evidence with content hash `evidenceHash` is already registered.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol\":\"UploadEvidence\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol\":{\"keccak256\":\"0xaa3e7882cb4fd081c14b2c65c5d0eaef76d94170c33917a0fc528201f09c1f90\",\"urls\":[\"bzzr://6d22e3fc2b1f9af067df4b679a6e8ece0e68f07021ea32549faf39f7134b5dc7\"]},\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol\":{\"keccak256\":\"0x28fc2dc60ae5c284adade2d85b17056fc634a218683c68185e60acabd23a8bc1\",\"urls\":[\"bzzr://187765dc8ff1345fbe092c58eba7e0f90be1fe26427de7ccfc82c21bb3ce6c4c\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506106b3806100206000396000f3fe608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046369291ed081146100575780637a079d31146101a3575b600080fd5b6101a16004803603606081101561006d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100a557600080fd5b8201836020820111156100b757600080fd5b803590602001918460018302840111640100000000831117156100d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561012c57600080fd5b82018360208201111561013e57600080fd5b8035906020019184600183028401116401000000008311171561016057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061025d945050505050565b005b610249600480360360208110156101b957600080fd5b8101906020810181356401000000008111156101d457600080fd5b8201836020820111156101e657600080fd5b8035906020019184600183028401116401000000008311171561020857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105f5945050505050565b604080519115158252519081900360200190f35b6000816040518082805190602001908083835b6020831061028f5780518252601f199092019160209182019101610270565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff161591506103189050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806106606028913960400191505060405180910390fd5b6040517f51a94a5f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173ffffffffffffffffffffffffffffffffffffffff8716936351a94a5f9387939283926044019185019080838360005b83811015610398578181015183820152602001610380565b50505050905090810190601f1680156103c55780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b5050505060016000826040518082805190602001908083835b602083106104305780518252601f199092019160209182019101610411565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381018420805460ff191695151595909517909455505083513392859281019182918401908083835b6020831061049e5780518252601f19909201916020918201910161047f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208473ffffffffffffffffffffffffffffffffffffffff167fef770c44903f5442a75715546b206c07d84ab410a5436d70c0e65297caaff3ca8585604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561055457818101518382015260200161053c565b50505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156105b457818101518382015260200161059c565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a4505050565b600080826040518082805190602001908083835b602083106106285780518252601f199092019160209182019101610609565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff1694935050505056fe5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564a165627a7a72305820d02ffc9b128dcc5b522b066afc9544aef3682eeb11f628c09d2410be3a32d8b00029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610052577c0100000000000000000000000000000000000000000000000000000000600035046369291ed081146100575780637a079d31146101a3575b600080fd5b6101a16004803603606081101561006d57600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691908101906040810160208201356401000000008111156100a557600080fd5b8201836020820111156100b757600080fd5b803590602001918460018302840111640100000000831117156100d957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561012c57600080fd5b82018360208201111561013e57600080fd5b8035906020019184600183028401116401000000008311171561016057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061025d945050505050565b005b610249600480360360208110156101b957600080fd5b8101906020810181356401000000008111156101d457600080fd5b8201836020820111156101e657600080fd5b8035906020019184600183028401116401000000008311171561020857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506105f5945050505050565b604080519115158252519081900360200190f35b6000816040518082805190602001908083835b6020831061028f5780518252601f199092019160209182019101610270565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff161591506103189050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806106606028913960400191505060405180910390fd5b6040517f51a94a5f00000000000000000000000000000000000000000000000000000000815260206004820181815284516024840152845173ffffffffffffffffffffffffffffffffffffffff8716936351a94a5f9387939283926044019185019080838360005b83811015610398578181015183820152602001610380565b50505050905090810190601f1680156103c55780820380516001836020036101000a031916815260200191505b5092505050600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b5050505060016000826040518082805190602001908083835b602083106104305780518252601f199092019160209182019101610411565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381018420805460ff191695151595909517909455505083513392859281019182918401908083835b6020831061049e5780518252601f19909201916020918201910161047f565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208473ffffffffffffffffffffffffffffffffffffffff167fef770c44903f5442a75715546b206c07d84ab410a5436d70c0e65297caaff3ca8585604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561055457818101518382015260200161053c565b50505050905090810190601f1680156105815780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156105b457818101518382015260200161059c565b50505050905090810190601f1680156105e15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a4505050565b600080826040518082805190602001908083835b602083106106285780518252601f199092019160209182019101610609565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff1694935050505056fe5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564a165627a7a72305820d02ffc9b128dcc5b522b066afc9544aef3682eeb11f628c09d2410be3a32d8b00029",
  "sourceMap": "199:1860:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:1860:5;;;;;;;",
  "deployedSourceMap": "199:1860:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:1860:5;;;;;;;;;;;;;;;;;;;;;;;;1607:450;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1607:450:5;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1607:450:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1607:450:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1607:450:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1607:450:5;;;;;;;;-1:-1:-1;1607:450:5;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;1607:450:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1607:450:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1607:450:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1607:450:5;;-1:-1:-1;1607:450:5;;-1:-1:-1;;;;;1607:450:5:i;:::-;;717:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;717:139:5;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;717:139:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;717:139:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;717:139:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;717:139:5;;-1:-1:-1;717:139:5;;-1:-1:-1;;;;;717:139:5:i;:::-;;;;;;;;;;;;;;;;;;1607:450;1729:16;1746:12;1729:30;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1729:30:5;;;;;-1:-1:-1;1729:30:5;;;;;;;;;;;;;1728:31;;-1:-1:-1;1720:84:5;;-1:-1:-1;1720:84:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:48;;;;;;;;;;;;;;;;;;;;:33;;;;;;1848:13;;1814:48;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1814:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:48:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1814:48:5;;;;1905:4;1872:16;1889:12;1872:30;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1872:30:5;;;;;-1:-1:-1;1872:30:5;;;;;;;;;;:37;;-1:-1:-1;;1872:37:5;;;;;;;;;;;-1:-1:-1;;1964:31:5;;2039:10;;1964:31;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1964:31:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1964:31:5;;;1954:42;;;;;;1944:8;1924:126;;;2010:13;2025:12;1924:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1924:126:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1924:126:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1924:126:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:450;;;:::o;717:139::-;796:4;819:16;836:12;819:30;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;819:30:5;;;;;-1:-1:-1;819:30:5;;;;;;;;;;;;;;717:139;-1:-1:-1;;;;717:139:5:o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./Evidencable.sol\";\n\n/// @title Contract to register evidence based on uploading content to IPFS\n/// @author Roberto García (http://rhizomik.net/~roberto/)\ncontract UploadEvidence {\n\n    /// @notice Allows checking if some content has already been used as evidence.\n    mapping(string => bool) private existingEvidence;\n\n    event UploadEvidenceEvent(address indexed registry, bytes32 indexed evidencedIdHash,\n        string evidencedHash, string evidenceHash, address indexed evidencer);\n\n    /// @notice Get if the evidence with content hash `evidenceHash` is already registered.\n    /// @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash\n    function getEvidenceExistence(string memory evidenceHash) public view returns (bool) {\n        return existingEvidence[evidenceHash];\n    }\n\n    /// @notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n    /// has `evidenceHash` and is registered by `msg.sender`.\n    /// @dev The address of the registry containing the evidenced item is required to update\n    /// its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n    /// Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n    /// @param registry The address of the contract holding the items evidenced\n    /// @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n    /// @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash\n    function addEvidence(address registry, string memory evidencedHash, string memory evidenceHash) public {\n        require(!existingEvidence[evidenceHash], \"The evidence has been already registered\");\n        Evidencable(registry).addEvidence(evidencedHash);\n        existingEvidence[evidenceHash] = true;\n        emit UploadEvidenceEvent(registry, keccak256(abi.encodePacked(evidencedHash)),\n            evidencedHash, evidenceHash, msg.sender);\n    }\n}\n",
  "sourcePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
  "ast": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
    "exportedSymbols": {
      "UploadEvidence": [
        711
      ]
    },
    "id": 712,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 636,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:5"
      },
      {
        "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
        "file": "./Evidencable.sol",
        "id": 637,
        "nodeType": "ImportDirective",
        "scope": 712,
        "sourceUnit": 264,
        "src": "34:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Contract to register evidence based on uploading content to IPFS\n @author Roberto García (http://rhizomik.net/~roberto/)",
        "fullyImplemented": true,
        "id": 711,
        "linearizedBaseContracts": [
          711
        ],
        "name": "UploadEvidence",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 641,
            "name": "existingEvidence",
            "nodeType": "VariableDeclaration",
            "scope": 711,
            "src": "313:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 640,
              "keyType": {
                "id": 638,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "321:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "313:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 639,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "331:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 653,
            "name": "UploadEvidenceEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "indexed": true,
                  "name": "registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "394:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "indexed": true,
                  "name": "evidencedIdHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "420:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "indexed": false,
                  "name": "evidencedHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "461:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "indexed": false,
                  "name": "evidenceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "483:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 651,
                  "indexed": true,
                  "name": "evidencer",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "504:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "393:137:5"
            },
            "src": "368:163:5"
          },
          {
            "body": {
              "id": 664,
              "nodeType": "Block",
              "src": "802:54:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 660,
                      "name": "existingEvidence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 641,
                      "src": "819:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                        "typeString": "mapping(string memory => bool)"
                      }
                    },
                    "id": 662,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 661,
                      "name": "evidenceHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 655,
                      "src": "836:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "819:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 659,
                  "id": 663,
                  "nodeType": "Return",
                  "src": "812:37:5"
                }
              ]
            },
            "documentation": "@notice Get if the evidence with content hash `evidenceHash` is already registered.\n @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash",
            "id": 665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEvidenceExistence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "evidenceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "747:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "746:28:5"
            },
            "returnParameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 658,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 665,
                  "src": "796:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "795:6:5"
            },
            "scope": 711,
            "src": "717:139:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 709,
              "nodeType": "Block",
              "src": "1710:347:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1728:31:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 675,
                            "name": "existingEvidence",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "1729:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 677,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 676,
                            "name": "evidenceHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "1746:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1729:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564",
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:42:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        },
                        "value": "The evidence has been already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                          "typeString": "literal_string \"The evidence has been already registered\""
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1337,
                        1338
                      ],
                      "referencedDeclaration": 1338,
                      "src": "1720:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 681,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "1848:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 683,
                            "name": "registry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "1826:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 682,
                          "name": "Evidencable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "1814:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Evidencable_$263_$",
                            "typeString": "type(contract Evidencable)"
                          }
                        },
                        "id": 684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1814:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Evidencable_$263",
                          "typeString": "contract Evidencable"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addEvidence",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 233,
                      "src": "1814:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:48:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 689,
                        "name": "existingEvidence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "1872:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 691,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "1889:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1872:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1905:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1872:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 694,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:37:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "1944:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 700,
                                "name": "evidencedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "1981:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 698,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1321,
                                "src": "1964:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1964:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1964:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 697,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "1954:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1954:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 703,
                        "name": "evidencedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2010:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 704,
                        "name": "evidenceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 671,
                        "src": "2025:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "2039:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2039:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 695,
                      "name": "UploadEvidenceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 653,
                      "src": "1924:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,string memory,string memory,address)"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:126:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "EmitStatement",
                  "src": "1919:131:5"
                }
              ]
            },
            "documentation": "@notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n has `evidenceHash` and is registered by `msg.sender`.\n @dev The address of the registry containing the evidenced item is required to update\n its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n @param registry The address of the contract holding the items evidenced\n @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash",
            "id": 710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEvidence",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "name": "registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "1628:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "name": "evidencedHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "1646:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "name": "evidenceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 710,
                  "src": "1675:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1627:75:5"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:0:5"
            },
            "scope": 711,
            "src": "1607:450:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 712,
        "src": "199:1860:5"
      }
    ],
    "src": "0:2060:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/UploadEvidence.sol",
      "exportedSymbols": {
        "UploadEvidence": [
          711
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 636,
        "name": "PragmaDirective",
        "src": "0:32:5"
      },
      {
        "attributes": {
          "SourceUnit": 264,
          "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Evidencable.sol",
          "file": "./Evidencable.sol",
          "scope": 712,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 637,
        "name": "ImportDirective",
        "src": "34:27:5"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title Contract to register evidence based on uploading content to IPFS\n @author Roberto García (http://rhizomik.net/~roberto/)",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            711
          ],
          "name": "UploadEvidence",
          "scope": 712
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "name": "existingEvidence",
              "scope": 711,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 638,
                    "name": "ElementaryTypeName",
                    "src": "321:6:5"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 639,
                    "name": "ElementaryTypeName",
                    "src": "331:4:5"
                  }
                ],
                "id": 640,
                "name": "Mapping",
                "src": "313:23:5"
              }
            ],
            "id": 641,
            "name": "VariableDeclaration",
            "src": "313:48:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "UploadEvidenceEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "registry",
                      "scope": 653,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 642,
                        "name": "ElementaryTypeName",
                        "src": "394:7:5"
                      }
                    ],
                    "id": 643,
                    "name": "VariableDeclaration",
                    "src": "394:24:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "evidencedIdHash",
                      "scope": 653,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 644,
                        "name": "ElementaryTypeName",
                        "src": "420:7:5"
                      }
                    ],
                    "id": 645,
                    "name": "VariableDeclaration",
                    "src": "420:31:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "evidencedHash",
                      "scope": 653,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 646,
                        "name": "ElementaryTypeName",
                        "src": "461:6:5"
                      }
                    ],
                    "id": 647,
                    "name": "VariableDeclaration",
                    "src": "461:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "evidenceHash",
                      "scope": 653,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 648,
                        "name": "ElementaryTypeName",
                        "src": "483:6:5"
                      }
                    ],
                    "id": 649,
                    "name": "VariableDeclaration",
                    "src": "483:19:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "evidencer",
                      "scope": 653,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 650,
                        "name": "ElementaryTypeName",
                        "src": "504:7:5"
                      }
                    ],
                    "id": 651,
                    "name": "VariableDeclaration",
                    "src": "504:25:5"
                  }
                ],
                "id": 652,
                "name": "ParameterList",
                "src": "393:137:5"
              }
            ],
            "id": 653,
            "name": "EventDefinition",
            "src": "368:163:5"
          },
          {
            "attributes": {
              "documentation": "@notice Get if the evidence with content hash `evidenceHash` is already registered.\n @param evidenceHash Hash of the evidence content, for instance IPFS Base58 Hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getEvidenceExistence",
              "scope": 711,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "evidenceHash",
                      "scope": 665,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 654,
                        "name": "ElementaryTypeName",
                        "src": "747:6:5"
                      }
                    ],
                    "id": 655,
                    "name": "VariableDeclaration",
                    "src": "747:26:5"
                  }
                ],
                "id": 656,
                "name": "ParameterList",
                "src": "746:28:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 665,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 657,
                        "name": "ElementaryTypeName",
                        "src": "796:4:5"
                      }
                    ],
                    "id": 658,
                    "name": "VariableDeclaration",
                    "src": "796:4:5"
                  }
                ],
                "id": 659,
                "name": "ParameterList",
                "src": "795:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 659
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 641,
                              "type": "mapping(string memory => bool)",
                              "value": "existingEvidence"
                            },
                            "id": 660,
                            "name": "Identifier",
                            "src": "819:16:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 655,
                              "type": "string memory",
                              "value": "evidenceHash"
                            },
                            "id": 661,
                            "name": "Identifier",
                            "src": "836:12:5"
                          }
                        ],
                        "id": 662,
                        "name": "IndexAccess",
                        "src": "819:30:5"
                      }
                    ],
                    "id": 663,
                    "name": "Return",
                    "src": "812:37:5"
                  }
                ],
                "id": 664,
                "name": "Block",
                "src": "802:54:5"
              }
            ],
            "id": 665,
            "name": "FunctionDefinition",
            "src": "717:139:5"
          },
          {
            "attributes": {
              "documentation": "@notice Add evidence for item in `registry` identified by `evidencedHash`. The evidence\n has `evidenceHash` and is registered by `msg.sender`.\n @dev The address of the registry containing the evidenced item is required to update\n its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events.\n Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.\n @param registry The address of the contract holding the items evidenced\n @param evidencedHash Hash used by the registry contract to identify the item receiving evidence\n @param evidenceHash Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addEvidence",
              "scope": 711,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "registry",
                      "scope": 710,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 666,
                        "name": "ElementaryTypeName",
                        "src": "1628:7:5"
                      }
                    ],
                    "id": 667,
                    "name": "VariableDeclaration",
                    "src": "1628:16:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "evidencedHash",
                      "scope": 710,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 668,
                        "name": "ElementaryTypeName",
                        "src": "1646:6:5"
                      }
                    ],
                    "id": 669,
                    "name": "VariableDeclaration",
                    "src": "1646:27:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "evidenceHash",
                      "scope": 710,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 670,
                        "name": "ElementaryTypeName",
                        "src": "1675:6:5"
                      }
                    ],
                    "id": 671,
                    "name": "VariableDeclaration",
                    "src": "1675:26:5"
                  }
                ],
                "id": 672,
                "name": "ParameterList",
                "src": "1627:75:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 673,
                "name": "ParameterList",
                "src": "1710:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_67c6325cff76fdadc65bda041b23cf3ad07b7daa3a064cfcaeba5598b26661a3",
                                  "typeString": "literal_string \"The evidence has been already registered\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1337,
                                1338
                              ],
                              "referencedDeclaration": 1338,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 674,
                            "name": "Identifier",
                            "src": "1720:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 641,
                                      "type": "mapping(string memory => bool)",
                                      "value": "existingEvidence"
                                    },
                                    "id": 675,
                                    "name": "Identifier",
                                    "src": "1729:16:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 671,
                                      "type": "string memory",
                                      "value": "evidenceHash"
                                    },
                                    "id": 676,
                                    "name": "Identifier",
                                    "src": "1746:12:5"
                                  }
                                ],
                                "id": 677,
                                "name": "IndexAccess",
                                "src": "1729:30:5"
                              }
                            ],
                            "id": 678,
                            "name": "UnaryOperation",
                            "src": "1728:31:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468652065766964656e636520686173206265656e20616c72656164792072656769737465726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The evidence has been already registered\"",
                              "value": "The evidence has been already registered"
                            },
                            "id": 679,
                            "name": "Literal",
                            "src": "1761:42:5"
                          }
                        ],
                        "id": 680,
                        "name": "FunctionCall",
                        "src": "1720:84:5"
                      }
                    ],
                    "id": 681,
                    "name": "ExpressionStatement",
                    "src": "1720:84:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addEvidence",
                              "referencedDeclaration": 233,
                              "type": "function (string memory) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "contract Evidencable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 263,
                                      "type": "type(contract Evidencable)",
                                      "value": "Evidencable"
                                    },
                                    "id": 682,
                                    "name": "Identifier",
                                    "src": "1814:11:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 667,
                                      "type": "address",
                                      "value": "registry"
                                    },
                                    "id": 683,
                                    "name": "Identifier",
                                    "src": "1826:8:5"
                                  }
                                ],
                                "id": 684,
                                "name": "FunctionCall",
                                "src": "1814:21:5"
                              }
                            ],
                            "id": 685,
                            "name": "MemberAccess",
                            "src": "1814:33:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 669,
                              "type": "string memory",
                              "value": "evidencedHash"
                            },
                            "id": 686,
                            "name": "Identifier",
                            "src": "1848:13:5"
                          }
                        ],
                        "id": 687,
                        "name": "FunctionCall",
                        "src": "1814:48:5"
                      }
                    ],
                    "id": 688,
                    "name": "ExpressionStatement",
                    "src": "1814:48:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 641,
                                  "type": "mapping(string memory => bool)",
                                  "value": "existingEvidence"
                                },
                                "id": 689,
                                "name": "Identifier",
                                "src": "1872:16:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 671,
                                  "type": "string memory",
                                  "value": "evidenceHash"
                                },
                                "id": 690,
                                "name": "Identifier",
                                "src": "1889:12:5"
                              }
                            ],
                            "id": 691,
                            "name": "IndexAccess",
                            "src": "1872:30:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 692,
                            "name": "Literal",
                            "src": "1905:4:5"
                          }
                        ],
                        "id": 693,
                        "name": "Assignment",
                        "src": "1872:37:5"
                      }
                    ],
                    "id": 694,
                    "name": "ExpressionStatement",
                    "src": "1872:37:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 653,
                              "type": "function (address,bytes32,string memory,string memory,address)",
                              "value": "UploadEvidenceEvent"
                            },
                            "id": 695,
                            "name": "Identifier",
                            "src": "1924:19:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 667,
                              "type": "address",
                              "value": "registry"
                            },
                            "id": 696,
                            "name": "Identifier",
                            "src": "1944:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1328,
                                  "type": "function (bytes memory) pure returns (bytes32)",
                                  "value": "keccak256"
                                },
                                "id": 697,
                                "name": "Identifier",
                                "src": "1954:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "encodePacked",
                                      "referencedDeclaration": null,
                                      "type": "function () pure returns (bytes memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1321,
                                          "type": "abi",
                                          "value": "abi"
                                        },
                                        "id": 698,
                                        "name": "Identifier",
                                        "src": "1964:3:5"
                                      }
                                    ],
                                    "id": 699,
                                    "name": "MemberAccess",
                                    "src": "1964:16:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 669,
                                      "type": "string memory",
                                      "value": "evidencedHash"
                                    },
                                    "id": 700,
                                    "name": "Identifier",
                                    "src": "1981:13:5"
                                  }
                                ],
                                "id": 701,
                                "name": "FunctionCall",
                                "src": "1964:31:5"
                              }
                            ],
                            "id": 702,
                            "name": "FunctionCall",
                            "src": "1954:42:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 669,
                              "type": "string memory",
                              "value": "evidencedHash"
                            },
                            "id": 703,
                            "name": "Identifier",
                            "src": "2010:13:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 671,
                              "type": "string memory",
                              "value": "evidenceHash"
                            },
                            "id": 704,
                            "name": "Identifier",
                            "src": "2025:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1334,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 705,
                                "name": "Identifier",
                                "src": "2039:3:5"
                              }
                            ],
                            "id": 706,
                            "name": "MemberAccess",
                            "src": "2039:10:5"
                          }
                        ],
                        "id": 707,
                        "name": "FunctionCall",
                        "src": "1924:126:5"
                      }
                    ],
                    "id": 708,
                    "name": "EmitStatement",
                    "src": "1919:131:5"
                  }
                ],
                "id": 709,
                "name": "Block",
                "src": "1710:347:5"
              }
            ],
            "id": 710,
            "name": "FunctionDefinition",
            "src": "1607:450:5"
          }
        ],
        "id": 711,
        "name": "ContractDefinition",
        "src": "199:1860:5"
      }
    ],
    "id": 712,
    "name": "SourceUnit",
    "src": "0:2060:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xaB3F62eA71735B557C79877a343E7F1689868E23",
      "transactionHash": "0x55f4ee798ce8df0fd68f50aa30f57a344bd73066b341a22c8fadea394ac2178d"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-06T23:10:00.371Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Roberto García (http://rhizomik.net/~roberto/)",
    "methods": {
      "addEvidence(address,string,string)": {
        "details": "The address of the registry containing the evidenced item is required to update its evidence count. Evidence is stored just in the log as UploadEvidenceEvent events. Note: the evidenceHash is hashed using keccak256 before emitting the event so it can be indexed.",
        "params": {
          "evidenceHash": "Hash of the uploaded content to be used as evidence, for instance IPFS Base58 Hash",
          "evidencedHash": "Hash used by the registry contract to identify the item receiving evidence",
          "registry": "The address of the contract holding the items evidenced"
        }
      },
      "getEvidenceExistence(string)": {
        "params": {
          "evidenceHash": "Hash of the evidence content, for instance IPFS Base58 Hash"
        }
      }
    },
    "title": "Contract to register evidence based on uploading content to IPFS"
  },
  "userdoc": {
    "methods": {
      "addEvidence(address,string,string)": {
        "notice": "Add evidence for item in `registry` identified by `evidencedHash`. The evidence has `evidenceHash` and is registered by `msg.sender`."
      },
      "getEvidenceExistence(string)": {
        "notice": "Get if the evidence with content hash `evidenceHash` is already registered."
      }
    }
  }
}
