{
  "contractName": "Stakable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "isStakable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "isStaked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "hash",
          "type": "string"
        }
      ],
      "name": "removeStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"isStakable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"isStaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"removeStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Roberto Garc\\u00eda (http://rhizomik.net/~roberto/)\",\"kind\":\"dev\",\"methods\":{\"addStake(uint256,string)\":{\"params\":{\"amount\":\"Amount of stake on the registered token to add\",\"hash\":\"Hash identifying the item to get stake, for instance IPFS Base58 Hash\"}},\"isStakable(string)\":{\"params\":{\"hash\":\"Hash identifying the item, for instance IPFS Base58 Hash\"}},\"isStaked(string)\":{\"details\":\"Used to check if the corresponding item has a current stake bigger than 0.\",\"params\":{\"hash\":\"Hash identifying the item to get stake, for instance IPFS Base58 Hash\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeStake(uint256,string)\":{\"params\":{\"amount\":\"Amount of stake on the registered token to remove\",\"hash\":\"Hash identifying the item to loose stake, for instance IPFS Base58 Hash\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setToken(address)\":{\"params\":{\"token\":\"The address of the authorised token contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Library to implement items that can accumulate stake\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint256,string)\":{\"notice\":\"Adds `amount` stake on the registered token to the item with `hash`.\"},\"isStakable(string)\":{\"notice\":\"Checks if the item with `hash` can have stake, depending on implementation. For instance, the item is already registered.\"},\"isStaked(string)\":{\"notice\":\"Check if the stakable `hash` has some stake.\"},\"removeStake(uint256,string)\":{\"notice\":\"Removes `amount` of stake on the registered token from the item with `hash`.\"},\"setToken(address)\":{\"notice\":\"Sets the `token` address authorised to add and remove stake.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Stakable.sol\":\"Stakable\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Stakable.sol\":{\"keccak256\":\"0x57b959910aeee06905abdab8c98b3e3324ae256bbec5753dcf301d2791b80874\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://39bceeb9cffa08f4906b43f287ff18aabb0a34ddd3a019541f92c492ea1f978f\",\"dweb:/ipfs/QmYFoGSx2nPj583PdiywyAxAmGSe6NMZpTzwYHMdNceatV\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061072a806100616000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063835d83ef11610066578063835d83ef146100d95780638da5cb5b14610117578063b288b06714610132578063c3e53c1914610145578063f2fde38b1461016857600080fd5b8063144fa6d7146100985780631fc91d58146100ad57806329cf9629146100c0578063715018a6146100d1575b600080fd5b6100ab6100a6366004610532565b61017b565b005b6100ab6100bb36600461059f565b6101d0565b6100ab6100ce366004610562565b50565b6100ab6102c5565b6101046100e7366004610562565b805160208183018101805160028252928201919093012091525481565b6040519081526020015b60405180910390f35b6000546040516001600160a01b03909116815260200161010e565b6100ab61014036600461059f565b610339565b610158610153366004610562565b610391565b604051901515815260200161010e565b6100ab610176366004610532565b6103bb565b6000546001600160a01b031633146101ae5760405162461bcd60e51b81526004016101a590610664565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146101fa5760405162461bcd60e51b81526004016101a590610621565b60028160405161020a91906105e6565b90815260200160405180910390205482111561028e5760405162461bcd60e51b815260206004820152603760248201527f4e6f206d6f7265207468616e2074686520616d6f756e742063757272656e746c60448201527f79207374616b65642063616e2062652072656d6f76656400000000000000000060648201526084016101a5565b8160028260405161029f91906105e6565b908152602001604051809103902060008282546102bc91906106b1565b90915550505050565b6000546001600160a01b031633146102ef5760405162461bcd60e51b81526004016101a590610664565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031633146103635760405162461bcd60e51b81526004016101a590610621565b8160028260405161037491906105e6565b908152602001604051809103902060008282546102bc9190610699565b6000806002836040516103a491906105e6565b908152602001604051809103902054119050919050565b6000546001600160a01b031633146103e55760405162461bcd60e51b81526004016101a590610664565b6001600160a01b03811661044a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082601f8301126104b657600080fd5b813567ffffffffffffffff808211156104d1576104d16106de565b604051601f8301601f19908116603f011681019082821181831017156104f9576104f96106de565b8160405283815286602085880101111561051257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561054457600080fd5b81356001600160a01b038116811461055b57600080fd5b9392505050565b60006020828403121561057457600080fd5b813567ffffffffffffffff81111561058b57600080fd5b610597848285016104a5565b949350505050565b600080604083850312156105b257600080fd5b82359150602083013567ffffffffffffffff8111156105d057600080fd5b6105dc858286016104a5565b9150509250929050565b6000825160005b8181101561060757602081860181015185830152016105ed565b81811115610616576000828501525b509190910192915050565b60208082526023908201527f4f6e6c79207265676973746572656420746f6b656e2063616e20616464207374604082015262616b6560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156106ac576106ac6106c8565b500190565b6000828210156106c3576106c36106c8565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208acedaedb4be2058e49acd562f6f2d8138f46aefde30a019986508dbb12d4dae64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063835d83ef11610066578063835d83ef146100d95780638da5cb5b14610117578063b288b06714610132578063c3e53c1914610145578063f2fde38b1461016857600080fd5b8063144fa6d7146100985780631fc91d58146100ad57806329cf9629146100c0578063715018a6146100d1575b600080fd5b6100ab6100a6366004610532565b61017b565b005b6100ab6100bb36600461059f565b6101d0565b6100ab6100ce366004610562565b50565b6100ab6102c5565b6101046100e7366004610562565b805160208183018101805160028252928201919093012091525481565b6040519081526020015b60405180910390f35b6000546040516001600160a01b03909116815260200161010e565b6100ab61014036600461059f565b610339565b610158610153366004610562565b610391565b604051901515815260200161010e565b6100ab610176366004610532565b6103bb565b6000546001600160a01b031633146101ae5760405162461bcd60e51b81526004016101a590610664565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146101fa5760405162461bcd60e51b81526004016101a590610621565b60028160405161020a91906105e6565b90815260200160405180910390205482111561028e5760405162461bcd60e51b815260206004820152603760248201527f4e6f206d6f7265207468616e2074686520616d6f756e742063757272656e746c60448201527f79207374616b65642063616e2062652072656d6f76656400000000000000000060648201526084016101a5565b8160028260405161029f91906105e6565b908152602001604051809103902060008282546102bc91906106b1565b90915550505050565b6000546001600160a01b031633146102ef5760405162461bcd60e51b81526004016101a590610664565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6001546001600160a01b031633146103635760405162461bcd60e51b81526004016101a590610621565b8160028260405161037491906105e6565b908152602001604051809103902060008282546102bc9190610699565b6000806002836040516103a491906105e6565b908152602001604051809103902054119050919050565b6000546001600160a01b031633146103e55760405162461bcd60e51b81526004016101a590610664565b6001600160a01b03811661044a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082601f8301126104b657600080fd5b813567ffffffffffffffff808211156104d1576104d16106de565b604051601f8301601f19908116603f011681019082821181831017156104f9576104f96106de565b8160405283815286602085880101111561051257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561054457600080fd5b81356001600160a01b038116811461055b57600080fd5b9392505050565b60006020828403121561057457600080fd5b813567ffffffffffffffff81111561058b57600080fd5b610597848285016104a5565b949350505050565b600080604083850312156105b257600080fd5b82359150602083013567ffffffffffffffff8111156105d057600080fd5b6105dc858286016104a5565b9150509250929050565b6000825160005b8181101561060757602081860181015185830152016105ed565b81811115610616576000828501525b509190910192915050565b60208082526023908201527f4f6e6c79207265676973746572656420746f6b656e2063616e20616464207374604082015262616b6560e81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156106ac576106ac6106c8565b500190565b6000828210156106c3576106c36106c8565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208acedaedb4be2058e49acd562f6f2d8138f46aefde30a019986508dbb12d4dae64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4886:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:666:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "116:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "125:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "128:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "118:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "118:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "118:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "95:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "103:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "91:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "91:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "110:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "87:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "77:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "141:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "164:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "151:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "151:20:17"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "145:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:28:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "190:18:17",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "184:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "231:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "233:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "233:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "233:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "223:2:17"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "227:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "220:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:10:17"
                  },
                  "nodeType": "YulIf",
                  "src": "217:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "262:17:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "276:2:17",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "272:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "272:7:17"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "266:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "288:23:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "302:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:9:17"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "292:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "320:71:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "342:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "366:2:17"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "370:4:17",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "362:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "362:13:17"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "377:2:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:22:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "382:2:17",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "354:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "354:31:17"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "387:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "350:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:40:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "338:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:53:17"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "324:10:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "450:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "452:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "452:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "452:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "409:10:17"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "421:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "406:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "406:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "429:10:17"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "441:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "426:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "403:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "403:46:17"
                  },
                  "nodeType": "YulIf",
                  "src": "400:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:2:17",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "492:10:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "481:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:22:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "481:22:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "519:6:17"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "527:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "512:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:18:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "512:18:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "578:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "587:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "580:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "580:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "580:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "553:6:17"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "561:2:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "549:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "549:15:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "566:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "545:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:26:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "573:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "542:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "539:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "620:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "628:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "616:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "639:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "647:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "635:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "635:17:17"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "654:2:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "603:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:54:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:54:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "681:6:17"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "689:2:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "677:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "677:15:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "694:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "673:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "673:26:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "701:1:17",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "666:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "666:37:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "712:15:17",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "721:6:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "712:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "41:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "49:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "57:5:17",
                "type": ""
              }
            ],
            "src": "14:719:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "808:216:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "854:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "863:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "856:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "856:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "856:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "829:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "838:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "825:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "825:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "850:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "821:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "821:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "818:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "879:36:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "905:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "892:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:23:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "883:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "978:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "980:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "980:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "980:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "937:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "948:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "963:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "968:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "959:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "959:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "972:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "955:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "955:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "944:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "944:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "934:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "924:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1013:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1003:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "774:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "785:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "797:6:17",
                "type": ""
              }
            ],
            "src": "738:286:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1109:242:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1155:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1164:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1167:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1157:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1157:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1157:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1130:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1139:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1126:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1126:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1151:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1122:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1119:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1180:37:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1207:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1194:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1194:23:17"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1184:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1260:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1269:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1272:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1262:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1262:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1262:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1232:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1240:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1229:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1226:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1285:60:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1317:9:17"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1328:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1313:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1313:22:17"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1337:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1295:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:50:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1285:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1075:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1086:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1098:6:17",
                "type": ""
              }
            ],
            "src": "1029:322:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1453:293:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1499:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1508:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1511:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1501:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1501:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1501:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1474:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1483:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1470:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1495:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1466:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1463:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1524:33:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1547:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1534:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1534:23:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1524:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1566:46:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1597:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1608:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1593:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1580:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:32:17"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1570:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1655:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1664:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1667:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1657:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1657:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1657:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1627:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1635:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1624:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1621:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1680:60:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1712:9:17"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1723:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1708:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1708:22:17"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1732:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1690:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:50:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1411:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1422:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1434:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1442:6:17",
                "type": ""
              }
            ],
            "src": "1356:390:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1890:289:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1900:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1920:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1914:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1914:13:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1904:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1936:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1945:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1940:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2007:77:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2032:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2037:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2028:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2028:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2055:6:17"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2063:1:17"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2051:3:17"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2051:14:17"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2067:4:17",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2047:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2047:25:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2041:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2041:32:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2021:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2021:53:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2021:53:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1966:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1969:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1963:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1977:21:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1979:17:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1988:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1991:4:17",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1984:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1984:12:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1979:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1959:3:17",
                    "statements": []
                  },
                  "src": "1955:129:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2110:31:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2123:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2128:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2119:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2119:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2137:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2112:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2112:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2112:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2099:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2102:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2096:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2096:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2093:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2150:23:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2161:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2166:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2157:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:16:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2150:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1866:3:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1871:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1882:3:17",
                "type": ""
              }
            ],
            "src": "1751:428:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2285:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2295:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2307:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2318:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2303:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2295:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2337:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2352:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2368:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2373:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2364:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2364:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2377:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2360:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2360:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2348:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2348:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2330:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2330:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2330:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2254:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2265:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2276:4:17",
                "type": ""
              }
            ],
            "src": "2184:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2487:92:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2497:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2509:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2505:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2505:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2497:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2539:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2564:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2557:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2557:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2550:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2550:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:41:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2456:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2467:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2478:4:17",
                "type": ""
              }
            ],
            "src": "2392:187:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2758:225:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2775:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2786:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2768:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2809:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2820:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2805:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2805:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2825:2:17",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2798:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2798:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2848:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2859:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2844:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2844:18:17"
                      },
                      {
                        "hexValue": "4f6e6c79207265676973746572656420746f6b656e2063616e20616464207374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2864:34:17",
                        "type": "",
                        "value": "Only registered token can add st"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2837:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2919:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2930:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2915:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2915:18:17"
                      },
                      {
                        "hexValue": "616b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2935:5:17",
                        "type": "",
                        "value": "ake"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2908:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2908:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2908:33:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2950:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2962:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2973:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2958:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2958:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2950:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2735:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2749:4:17",
                "type": ""
              }
            ],
            "src": "2584:399:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3162:245:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3179:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3190:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3172:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3172:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3172:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3213:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3224:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3209:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3209:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3229:2:17",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3202:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3202:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3202:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3252:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3263:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3248:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3248:18:17"
                      },
                      {
                        "hexValue": "4e6f206d6f7265207468616e2074686520616d6f756e742063757272656e746c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3268:34:17",
                        "type": "",
                        "value": "No more than the amount currentl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3241:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3241:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3241:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3323:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3334:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3319:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3319:18:17"
                      },
                      {
                        "hexValue": "79207374616b65642063616e2062652072656d6f766564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3339:25:17",
                        "type": "",
                        "value": "y staked can be removed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3312:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3312:53:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3312:53:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3374:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3386:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3397:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3382:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3382:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3374:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3139:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3153:4:17",
                "type": ""
              }
            ],
            "src": "2988:419:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3586:228:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3603:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3614:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3596:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3596:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3637:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3648:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3633:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3633:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3653:2:17",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3626:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3626:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3626:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3676:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3687:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3672:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3672:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3692:34:17",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3665:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3665:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3665:62:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3747:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3758:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:18:17"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3763:8:17",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3736:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:36:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3736:36:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3781:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3793:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3804:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3789:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3781:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3563:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3577:4:17",
                "type": ""
              }
            ],
            "src": "3412:402:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3993:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4010:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4021:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4003:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4003:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4003:21:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4044:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4055:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4040:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4040:18:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4060:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4033:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4033:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4033:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4083:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4094:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4079:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4079:18:17"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4099:34:17",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4072:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:62:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4072:62:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4155:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4166:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4143:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3970:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3984:4:17",
                "type": ""
              }
            ],
            "src": "3819:356:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4281:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4291:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4303:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4314:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4299:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4299:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4291:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4333:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4344:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4326:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4326:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4326:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4250:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4261:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4272:4:17",
                "type": ""
              }
            ],
            "src": "4180:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4410:80:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4437:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4439:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4439:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4439:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4426:1:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4433:1:17"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4429:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4429:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4423:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4423:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4420:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4468:16:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4479:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4482:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4475:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4468:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4393:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4396:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4402:3:17",
                "type": ""
              }
            ],
            "src": "4362:128:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4544:76:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4566:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4568:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4568:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4568:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4560:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4563:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4557:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4557:8:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4554:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4597:17:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4609:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4612:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4605:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4605:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4597:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4526:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4529:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4535:4:17",
                "type": ""
              }
            ],
            "src": "4495:125:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4657:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4674:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4681:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4686:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4677:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4677:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4667:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4667:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4667:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4714:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4717:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4707:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4707:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4707:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4738:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4741:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4731:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4731:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4731:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4625:127:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4789:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4806:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4813:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4818:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4809:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4809:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4799:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4799:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4799:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4846:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4849:4:17",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4839:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4839:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4839:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4870:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4873:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4863:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4863:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4863:15:17"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4757:127:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Only registered token can add st\")\n        mstore(add(headStart, 96), \"ake\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"No more than the amount currentl\")\n        mstore(add(headStart, 96), \"y staked can be removed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "323:1998:6:-:0;;;;;;;;;;;;-1:-1:-1;867:17:10;909:18;;-1:-1:-1;;;;;;909:18:10;665:10:15;909:18:10;;;;;942:43;;665:10:15;;;;942:43:10;;867:17;;942:43;857:135;323:1998:6;;;;;;",
  "deployedSourceMap": "323:1998:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:84;;;;;;:::i;:::-;;:::i;:::-;;2109:210;;;;;;:::i;:::-;;:::i;1107:57::-;;;;;;:::i;:::-;;;1700:145:10;;;:::i;414:40:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:25:17;;;4314:2;4299:18;414:40:6;;;;;;;;1068:85:10;1114:7;1140:6;1068:85;;-1:-1:-1;;;;;1140:6:10;;;2330:51:17;;2318:2;2303:18;1068:85:10;2285:102:17;1743:111:6;;;;;;:::i;:::-;;:::i;1401:100::-;;;;;;:::i;:::-;;:::i;:::-;;;2557:14:17;;2550:22;2532:41;;2520:2;2505:18;1401:100:6;2487:92:17;1994:240:10;;;;;;:::i;:::-;;:::i;802:84:6:-;1114:7:10;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:15;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;;;;;;;;;858:15:6::1;:23:::0;;-1:-1:-1;;;;;;858:23:6::1;-1:-1:-1::0;;;;;858:23:6;;;::::1;::::0;;;::::1;::::0;;802:84::o;2109:210::-;578:15;;-1:-1:-1;;;;;578:15:6;597:10;578:29;570:77;;;;-1:-1:-1;;;570:77:6;;;;;;;:::i;:::-;2214:6:::1;2221:4;2214:12;;;;;;:::i;:::-;;;;;;;;;;;;;;2204:6;:22;;2196:90;;;::::0;-1:-1:-1;;;2196:90:6;;3190:2:17;2196:90:6::1;::::0;::::1;3172:21:17::0;3229:2;3209:18;;;3202:30;3268:34;3248:18;;;3241:62;3339:25;3319:18;;;3312:53;3382:19;;2196:90:6::1;3162:245:17::0;2196:90:6::1;2308:6;2292;2299:4;2292:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;2109:210:6:o;1700:145:10:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:15;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:10;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:10::1;::::0;;1700:145::o;1743:111:6:-;578:15;;-1:-1:-1;;;;;578:15:6;597:10;578:29;570:77;;;;-1:-1:-1;;;570:77:6;;;;;;;:::i;:::-;1843:6:::1;1827;1834:4;1827:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;;;;;;:::i;1401:100::-:0;1459:4;1494:1;1479:6;1486:4;1479:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:16;1471:25;;1401:100;;;:::o;1994:240:10:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:10;665:10:15;1280:23:10;1272:68;;;;-1:-1:-1;;;1272:68:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:10;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:10;;3614:2:17;2074:73:10::1;::::0;::::1;3596:21:17::0;3653:2;3633:18;;;3626:30;3692:34;3672:18;;;3665:62;-1:-1:-1;;;3743:18:17;;;3736:36;3789:19;;2074:73:10::1;3586:228:17::0;2074:73:10::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:10;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:10::1;-1:-1:-1::0;;;;;2210:17:10;;;::::1;::::0;;;::::1;::::0;;1994:240::o;14:719:17:-;57:5;110:3;103:4;95:6;91:17;87:27;77:2;;128:1;125;118:12;77:2;164:6;151:20;190:18;227:2;223;220:10;217:2;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:17;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:2;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:2;;;590:1;587;580:12;539:2;654;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;67:666;;;;:::o;738:286::-;797:6;850:2;838:9;829:7;825:23;821:32;818:2;;;866:1;863;856:12;818:2;892:23;;-1:-1:-1;;;;;944:31:17;;934:42;;924:2;;990:1;987;980:12;924:2;1013:5;808:216;-1:-1:-1;;;808:216:17:o;1029:322::-;1098:6;1151:2;1139:9;1130:7;1126:23;1122:32;1119:2;;;1167:1;1164;1157:12;1119:2;1207:9;1194:23;1240:18;1232:6;1229:30;1226:2;;;1272:1;1269;1262:12;1226:2;1295:50;1337:7;1328:6;1317:9;1313:22;1295:50;:::i;:::-;1285:60;1109:242;-1:-1:-1;;;;1109:242:17:o;1356:390::-;1434:6;1442;1495:2;1483:9;1474:7;1470:23;1466:32;1463:2;;;1511:1;1508;1501:12;1463:2;1547:9;1534:23;1524:33;;1608:2;1597:9;1593:18;1580:32;1635:18;1627:6;1624:30;1621:2;;;1667:1;1664;1657:12;1621:2;1690:50;1732:7;1723:6;1712:9;1708:22;1690:50;:::i;:::-;1680:60;;;1453:293;;;;;:::o;1751:428::-;1882:3;1920:6;1914:13;1945:1;1955:129;1969:6;1966:1;1963:13;1955:129;;;2067:4;2051:14;;;2047:25;;2041:32;2028:11;;;2021:53;1984:12;1955:129;;;2102:6;2099:1;2096:13;2093:2;;;2137:1;2128:6;2123:3;2119:16;2112:27;2093:2;-1:-1:-1;2157:16:17;;;;;1890:289;-1:-1:-1;;1890:289:17:o;2584:399::-;2786:2;2768:21;;;2825:2;2805:18;;;2798:30;2864:34;2859:2;2844:18;;2837:62;-1:-1:-1;;;2930:2:17;2915:18;;2908:33;2973:3;2958:19;;2758:225::o;3819:356::-;4021:2;4003:21;;;4040:18;;;4033:30;4099:34;4094:2;4079:18;;4072:62;4166:2;4151:18;;3993:182::o;4362:128::-;4402:3;4433:1;4429:6;4426:1;4423:13;4420:2;;;4439:18;;:::i;:::-;-1:-1:-1;4475:9:17;;4410:80::o;4495:125::-;4535:4;4563:1;4560;4557:8;4554:2;;;4568:18;;:::i;:::-;-1:-1:-1;4605:9:17;;4544:76::o;4625:127::-;4686:10;4681:3;4677:20;4674:1;4667:31;4717:4;4714:1;4707:15;4741:4;4738:1;4731:15;4757:127;4818:10;4813:3;4809:20;4806:1;4799:31;4849:4;4846:1;4839:15;4873:4;4870:1;4863:15",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity ^0.8.6;\n\nimport \"openzeppelin-solidity/contracts/utils/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\n\n/// @title Library to implement items that can accumulate stake\n/// @author Roberto García (http://rhizomik.net/~roberto/)\ncontract Stakable is Ownable {\n  using SafeMath for uint256;\n\n  address authorisedToken;\n  mapping(string => uint256) public staked;\n\n  /// @dev Modifier controlling that only the registered token can add stake\n  modifier onlyAllowedToken() {\n    require(authorisedToken == msg.sender, \"Only registered token can add stake\");\n    _;\n  }\n\n  /// @notice Sets the `token` address authorised to add and remove stake.\n  /// @param token The address of the authorised token contract\n  function setToken(address token) public onlyOwner {\n    authorisedToken = token;\n  }\n\n  /// @notice Checks if the item with `hash` can have stake, depending on implementation.\n  /// For instance, the item is already registered.\n  /// @param hash Hash identifying the item, for instance IPFS Base58 Hash\n  function isStakable(string memory hash) virtual public {}\n\n  /// @notice Check if the stakable `hash` has some stake.\n  /// @dev Used to check if the corresponding item has a current stake bigger than 0.\n  /// @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash\n  function isStaked(string memory hash) public view returns(bool) {\n    return (staked[hash] > 0);\n  }\n\n  /// @notice Adds `amount` stake on the registered token to the item with `hash`.\n  /// @param amount Amount of stake on the registered token to add\n  /// @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash\n  function addStake(uint256 amount, string memory hash) public onlyAllowedToken {\n    staked[hash] += amount;\n  }\n\n  /// @notice Removes `amount` of stake on the registered token from the item with `hash`.\n  /// @param amount Amount of stake on the registered token to remove\n  /// @param hash Hash identifying the item to loose stake, for instance IPFS Base58 Hash\n  function removeStake(uint256 amount, string memory hash) public onlyAllowedToken {\n    require(amount <= staked[hash], 'No more than the amount currently staked can be removed');\n    staked[hash] -= amount;\n  }\n}\n",
  "sourcePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Stakable.sol",
  "ast": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Stakable.sol",
    "exportedSymbols": {
      "Context": [
        4769
      ],
      "Ownable": [
        4044
      ],
      "SafeMath": [
        5081
      ],
      "Stakable": [
        1375
      ]
    },
    "id": 1376,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1268,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1269,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 5082,
        "src": "71:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 1270,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 4045,
        "src": "137:60:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1272,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "344:7:6"
            },
            "id": 1273,
            "nodeType": "InheritanceSpecifier",
            "src": "344:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1271,
          "nodeType": "StructuredDocumentation",
          "src": "199:124:6",
          "text": "@title Library to implement items that can accumulate stake\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 1375,
        "linearizedBaseContracts": [
          1375,
          4044,
          4769
        ],
        "name": "Stakable",
        "nameLocation": "332:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1276,
            "libraryName": {
              "id": 1274,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5081,
              "src": "362:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "356:27:6",
            "typeName": {
              "id": 1275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "375:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1278,
            "mutability": "mutable",
            "name": "authorisedToken",
            "nameLocation": "395:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1375,
            "src": "387:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1277,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "835d83ef",
            "id": 1282,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "448:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1375,
            "src": "414:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 1281,
              "keyType": {
                "id": 1279,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "422:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "414:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 1280,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "432:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "564:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1286,
                          "name": "authorisedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1278,
                          "src": "578:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "597:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "597:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "578:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207265676973746572656420746f6b656e2063616e20616464207374616b65",
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "609:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79",
                          "typeString": "literal_string \"Only registered token can add stake\""
                        },
                        "value": "Only registered token can add stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79",
                          "typeString": "literal_string \"Only registered token can add stake\""
                        }
                      ],
                      "id": 1285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "570:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "570:77:6"
                },
                {
                  "id": 1293,
                  "nodeType": "PlaceholderStatement",
                  "src": "653:1:6"
                }
              ]
            },
            "documentation": {
              "id": 1283,
              "nodeType": "StructuredDocumentation",
              "src": "459:74:6",
              "text": "@dev Modifier controlling that only the registered token can add stake"
            },
            "id": 1295,
            "name": "onlyAllowedToken",
            "nameLocation": "545:16:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:6"
            },
            "src": "536:123:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "852:34:6",
              "statements": [
                {
                  "expression": {
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1303,
                      "name": "authorisedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "858:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1304,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "876:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "858:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "858:23:6"
                }
              ]
            },
            "documentation": {
              "id": 1296,
              "nodeType": "StructuredDocumentation",
              "src": "663:136:6",
              "text": "@notice Sets the `token` address authorised to add and remove stake.\n @param token The address of the authorised token contract"
            },
            "functionSelector": "144fa6d7",
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1300,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3993,
                  "src": "842:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "842:9:6"
              }
            ],
            "name": "setToken",
            "nameLocation": "811:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "828:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "820:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:15:6"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:6"
            },
            "scope": 1375,
            "src": "802:84:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1314,
              "nodeType": "Block",
              "src": "1162:2:6",
              "statements": []
            },
            "documentation": {
              "id": 1309,
              "nodeType": "StructuredDocumentation",
              "src": "890:214:6",
              "text": "@notice Checks if the item with `hash` can have stake, depending on implementation.\n For instance, the item is already registered.\n @param hash Hash identifying the item, for instance IPFS Base58 Hash"
            },
            "functionSelector": "29cf9629",
            "id": 1315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStakable",
            "nameLocation": "1116:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1141:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1315,
                  "src": "1127:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1126:20:6"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:6"
            },
            "scope": 1375,
            "src": "1107:57:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1465:36:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "1479:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 1325,
                          "indexExpression": {
                            "id": 1324,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "1486:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1479:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1494:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1479:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1328,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1478:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1322,
                  "id": 1329,
                  "nodeType": "Return",
                  "src": "1471:25:6"
                }
              ]
            },
            "documentation": {
              "id": 1316,
              "nodeType": "StructuredDocumentation",
              "src": "1168:230:6",
              "text": "@notice Check if the stakable `hash` has some stake.\n @dev Used to check if the corresponding item has a current stake bigger than 0.\n @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "c3e53c19",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nameLocation": "1410:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1433:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1419:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:20:6"
            },
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1459:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:6:6"
            },
            "scope": 1375,
            "src": "1401:100:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "1821:33:6",
              "statements": [
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1341,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "1827:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 1343,
                      "indexExpression": {
                        "id": 1342,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "1834:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1827:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1344,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "1843:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1827:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:22:6"
                }
              ]
            },
            "documentation": {
              "id": 1332,
              "nodeType": "StructuredDocumentation",
              "src": "1505:235:6",
              "text": "@notice Adds `amount` stake on the registered token to the item with `hash`.\n @param amount Amount of stake on the registered token to add\n @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "b288b067",
            "id": 1348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1338,
                  "name": "onlyAllowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1295,
                  "src": "1804:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:16:6"
              }
            ],
            "name": "addStake",
            "nameLocation": "1752:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1769:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "1761:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1791:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "1777:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:36:6"
            },
            "returnParameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:6"
            },
            "scope": 1375,
            "src": "1743:111:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1373,
              "nodeType": "Block",
              "src": "2190:129:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "2204:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1360,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "2214:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 1362,
                          "indexExpression": {
                            "id": 1361,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "2221:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2214:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2204:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265207468616e2074686520616d6f756e742063757272656e746c79207374616b65642063616e2062652072656d6f766564",
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2228:57:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788",
                          "typeString": "literal_string \"No more than the amount currently staked can be removed\""
                        },
                        "value": "No more than the amount currently staked can be removed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788",
                          "typeString": "literal_string \"No more than the amount currently staked can be removed\""
                        }
                      ],
                      "id": 1358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2196:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:90:6"
                },
                {
                  "expression": {
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1367,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2292:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "id": 1368,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "2299:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2292:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1370,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2308:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2292:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:22:6"
                }
              ]
            },
            "documentation": {
              "id": 1349,
              "nodeType": "StructuredDocumentation",
              "src": "1858:248:6",
              "text": "@notice Removes `amount` of stake on the registered token from the item with `hash`.\n @param amount Amount of stake on the registered token to remove\n @param hash Hash identifying the item to loose stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "1fc91d58",
            "id": 1374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1356,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1355,
                  "name": "onlyAllowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1295,
                  "src": "2173:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2173:16:6"
              }
            ],
            "name": "removeStake",
            "nameLocation": "2118:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2138:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "2130:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "2160:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "2146:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:36:6"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2190:0:6"
            },
            "scope": 1375,
            "src": "2109:210:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1376,
        "src": "323:1998:6",
        "usedErrors": []
      }
    ],
    "src": "46:2276:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/roberto/Proyectos/CopyrightLY/copyrightly/contracts/Stakable.sol",
    "exportedSymbols": {
      "Context": [
        4769
      ],
      "Ownable": [
        4044
      ],
      "SafeMath": [
        5081
      ],
      "Stakable": [
        1375
      ]
    },
    "id": 1376,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1268,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:23:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/utils/math/SafeMath.sol",
        "id": 1269,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 5082,
        "src": "71:65:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 1270,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 4045,
        "src": "137:60:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1272,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4044,
              "src": "344:7:6"
            },
            "id": 1273,
            "nodeType": "InheritanceSpecifier",
            "src": "344:7:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1271,
          "nodeType": "StructuredDocumentation",
          "src": "199:124:6",
          "text": "@title Library to implement items that can accumulate stake\n @author Roberto García (http://rhizomik.net/~roberto/)"
        },
        "fullyImplemented": true,
        "id": 1375,
        "linearizedBaseContracts": [
          1375,
          4044,
          4769
        ],
        "name": "Stakable",
        "nameLocation": "332:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1276,
            "libraryName": {
              "id": 1274,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5081,
              "src": "362:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "356:27:6",
            "typeName": {
              "id": 1275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "375:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1278,
            "mutability": "mutable",
            "name": "authorisedToken",
            "nameLocation": "395:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1375,
            "src": "387:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1277,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "387:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "835d83ef",
            "id": 1282,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "448:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1375,
            "src": "414:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 1281,
              "keyType": {
                "id": 1279,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "422:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "414:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 1280,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "432:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1294,
              "nodeType": "Block",
              "src": "564:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1286,
                          "name": "authorisedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1278,
                          "src": "578:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "597:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "597:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "578:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79207265676973746572656420746f6b656e2063616e20616464207374616b65",
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "609:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79",
                          "typeString": "literal_string \"Only registered token can add stake\""
                        },
                        "value": "Only registered token can add stake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_103bb7c683a5c21c03332d1ab57b573d6604680ec615d879e6f1567d75bd5d79",
                          "typeString": "literal_string \"Only registered token can add stake\""
                        }
                      ],
                      "id": 1285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "570:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:77:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "570:77:6"
                },
                {
                  "id": 1293,
                  "nodeType": "PlaceholderStatement",
                  "src": "653:1:6"
                }
              ]
            },
            "documentation": {
              "id": 1283,
              "nodeType": "StructuredDocumentation",
              "src": "459:74:6",
              "text": "@dev Modifier controlling that only the registered token can add stake"
            },
            "id": 1295,
            "name": "onlyAllowedToken",
            "nameLocation": "545:16:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:6"
            },
            "src": "536:123:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "852:34:6",
              "statements": [
                {
                  "expression": {
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1303,
                      "name": "authorisedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "858:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1304,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "876:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "858:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1306,
                  "nodeType": "ExpressionStatement",
                  "src": "858:23:6"
                }
              ]
            },
            "documentation": {
              "id": 1296,
              "nodeType": "StructuredDocumentation",
              "src": "663:136:6",
              "text": "@notice Sets the `token` address authorised to add and remove stake.\n @param token The address of the authorised token contract"
            },
            "functionSelector": "144fa6d7",
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1300,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3993,
                  "src": "842:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "842:9:6"
              }
            ],
            "name": "setToken",
            "nameLocation": "811:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1298,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "828:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "820:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:15:6"
            },
            "returnParameters": {
              "id": 1302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:6"
            },
            "scope": 1375,
            "src": "802:84:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1314,
              "nodeType": "Block",
              "src": "1162:2:6",
              "statements": []
            },
            "documentation": {
              "id": 1309,
              "nodeType": "StructuredDocumentation",
              "src": "890:214:6",
              "text": "@notice Checks if the item with `hash` can have stake, depending on implementation.\n For instance, the item is already registered.\n @param hash Hash identifying the item, for instance IPFS Base58 Hash"
            },
            "functionSelector": "29cf9629",
            "id": 1315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStakable",
            "nameLocation": "1116:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1141:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1315,
                  "src": "1127:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1126:20:6"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:6"
            },
            "scope": 1375,
            "src": "1107:57:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1465:36:6",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1323,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "1479:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 1325,
                          "indexExpression": {
                            "id": 1324,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1318,
                            "src": "1486:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1479:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1494:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1479:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1328,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1478:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1322,
                  "id": 1329,
                  "nodeType": "Return",
                  "src": "1471:25:6"
                }
              ]
            },
            "documentation": {
              "id": 1316,
              "nodeType": "StructuredDocumentation",
              "src": "1168:230:6",
              "text": "@notice Check if the stakable `hash` has some stake.\n @dev Used to check if the corresponding item has a current stake bigger than 0.\n @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "c3e53c19",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaked",
            "nameLocation": "1410:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1433:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1419:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1419:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:20:6"
            },
            "returnParameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1459:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1458:6:6"
            },
            "scope": 1375,
            "src": "1401:100:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "1821:33:6",
              "statements": [
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1341,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "1827:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 1343,
                      "indexExpression": {
                        "id": 1342,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "1834:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1827:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1344,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "1843:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1827:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:22:6"
                }
              ]
            },
            "documentation": {
              "id": 1332,
              "nodeType": "StructuredDocumentation",
              "src": "1505:235:6",
              "text": "@notice Adds `amount` stake on the registered token to the item with `hash`.\n @param amount Amount of stake on the registered token to add\n @param hash Hash identifying the item to get stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "b288b067",
            "id": 1348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1338,
                  "name": "onlyAllowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1295,
                  "src": "1804:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1804:16:6"
              }
            ],
            "name": "addStake",
            "nameLocation": "1752:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1769:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "1761:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1336,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1791:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "1777:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1335,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:36:6"
            },
            "returnParameters": {
              "id": 1340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:6"
            },
            "scope": 1375,
            "src": "1743:111:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1373,
              "nodeType": "Block",
              "src": "2190:129:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "2204:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1360,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "2214:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 1362,
                          "indexExpression": {
                            "id": 1361,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "2221:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2214:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2204:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f206d6f7265207468616e2074686520616d6f756e742063757272656e746c79207374616b65642063616e2062652072656d6f766564",
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2228:57:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788",
                          "typeString": "literal_string \"No more than the amount currently staked can be removed\""
                        },
                        "value": "No more than the amount currently staked can be removed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2298f7e9bbceb26506a9abc26f09cba060b7e678c064eed999611d0f9bc38788",
                          "typeString": "literal_string \"No more than the amount currently staked can be removed\""
                        }
                      ],
                      "id": 1358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2196:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:90:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1366,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:90:6"
                },
                {
                  "expression": {
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1367,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2292:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 1369,
                      "indexExpression": {
                        "id": 1368,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "2299:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2292:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1370,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "2308:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2292:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2292:22:6"
                }
              ]
            },
            "documentation": {
              "id": 1349,
              "nodeType": "StructuredDocumentation",
              "src": "1858:248:6",
              "text": "@notice Removes `amount` of stake on the registered token from the item with `hash`.\n @param amount Amount of stake on the registered token to remove\n @param hash Hash identifying the item to loose stake, for instance IPFS Base58 Hash"
            },
            "functionSelector": "1fc91d58",
            "id": 1374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1356,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1355,
                  "name": "onlyAllowedToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1295,
                  "src": "2173:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2173:16:6"
              }
            ],
            "name": "removeStake",
            "nameLocation": "2118:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2138:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "2130:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "2160:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "2146:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:36:6"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2190:0:6"
            },
            "scope": 1375,
            "src": "2109:210:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1376,
        "src": "323:1998:6",
        "usedErrors": []
      }
    ],
    "src": "46:2276:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-29T10:19:14.174Z",
  "devdoc": {
    "author": "Roberto García (http://rhizomik.net/~roberto/)",
    "kind": "dev",
    "methods": {
      "addStake(uint256,string)": {
        "params": {
          "amount": "Amount of stake on the registered token to add",
          "hash": "Hash identifying the item to get stake, for instance IPFS Base58 Hash"
        }
      },
      "isStakable(string)": {
        "params": {
          "hash": "Hash identifying the item, for instance IPFS Base58 Hash"
        }
      },
      "isStaked(string)": {
        "details": "Used to check if the corresponding item has a current stake bigger than 0.",
        "params": {
          "hash": "Hash identifying the item to get stake, for instance IPFS Base58 Hash"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeStake(uint256,string)": {
        "params": {
          "amount": "Amount of stake on the registered token to remove",
          "hash": "Hash identifying the item to loose stake, for instance IPFS Base58 Hash"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setToken(address)": {
        "params": {
          "token": "The address of the authorised token contract"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Library to implement items that can accumulate stake",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addStake(uint256,string)": {
        "notice": "Adds `amount` stake on the registered token to the item with `hash`."
      },
      "isStakable(string)": {
        "notice": "Checks if the item with `hash` can have stake, depending on implementation. For instance, the item is already registered."
      },
      "isStaked(string)": {
        "notice": "Check if the stakable `hash` has some stake."
      },
      "removeStake(uint256,string)": {
        "notice": "Removes `amount` of stake on the registered token from the item with `hash`."
      },
      "setToken(address)": {
        "notice": "Sets the `token` address authorised to add and remove stake."
      }
    },
    "version": 1
  }
}