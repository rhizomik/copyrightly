// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class VerificationRequest extends ethereum.Event {
  get params(): VerificationRequest__Params {
    return new VerificationRequest__Params(this);
  }
}

export class VerificationRequest__Params {
  _event: VerificationRequest;

  constructor(event: VerificationRequest) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get evidencedHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get videoId(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class YouTubeEvidenceEvent extends ethereum.Event {
  get params(): YouTubeEvidenceEvent__Params {
    return new YouTubeEvidenceEvent__Params(this);
  }
}

export class YouTubeEvidenceEvent__Params {
  _event: YouTubeEvidenceEvent;

  constructor(event: YouTubeEvidenceEvent) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get registry(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get evidencedHash(): string {
    return this._event.parameters[2].value.toString();
  }

  get videoId(): string {
    return this._event.parameters[3].value.toString();
  }

  get evidencer(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get isVerified(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class YouTubeEvidence__evidencesResult {
  value0: Address;
  value1: Address;
  value2: string;
  value3: string;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: Address,
    value1: Address,
    value2: string,
    value3: string,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }
}

export class YouTubeEvidence extends ethereum.SmartContract {
  static bind(address: Address): YouTubeEvidence {
    return new YouTubeEvidence("YouTubeEvidence", address);
  }

  evidences(param0: Bytes): YouTubeEvidence__evidencesResult {
    let result = super.call(
      "evidences",
      "evidences(bytes32):(address,address,string,string,bool,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new YouTubeEvidence__evidencesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_evidences(
    param0: Bytes
  ): ethereum.CallResult<YouTubeEvidence__evidencesResult> {
    let result = super.tryCall(
      "evidences",
      "evidences(bytes32):(address,address,string,string,bool,bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new YouTubeEvidence__evidencesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  check(registry: Address, evidencedId: string, videoId: string): Bytes {
    let result = super.call("check", "check(address,string,string):(bytes32)", [
      ethereum.Value.fromAddress(registry),
      ethereum.Value.fromString(evidencedId),
      ethereum.Value.fromString(videoId)
    ]);

    return result[0].toBytes();
  }

  try_check(
    registry: Address,
    evidencedId: string,
    videoId: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "check",
      "check(address,string,string):(bytes32)",
      [
        ethereum.Value.fromAddress(registry),
        ethereum.Value.fromString(evidencedId),
        ethereum.Value.fromString(videoId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CheckCall extends ethereum.Call {
  get inputs(): CheckCall__Inputs {
    return new CheckCall__Inputs(this);
  }

  get outputs(): CheckCall__Outputs {
    return new CheckCall__Outputs(this);
  }
}

export class CheckCall__Inputs {
  _call: CheckCall;

  constructor(call: CheckCall) {
    this._call = call;
  }

  get registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get evidencedId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get videoId(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CheckCall__Outputs {
  _call: CheckCall;

  constructor(call: CheckCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ProcessVerificationCall extends ethereum.Call {
  get inputs(): ProcessVerificationCall__Inputs {
    return new ProcessVerificationCall__Inputs(this);
  }

  get outputs(): ProcessVerificationCall__Outputs {
    return new ProcessVerificationCall__Outputs(this);
  }
}

export class ProcessVerificationCall__Inputs {
  _call: ProcessVerificationCall;

  constructor(call: ProcessVerificationCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get valid(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ProcessVerificationCall__Outputs {
  _call: ProcessVerificationCall;

  constructor(call: ProcessVerificationCall) {
    this._call = call;
  }
}
