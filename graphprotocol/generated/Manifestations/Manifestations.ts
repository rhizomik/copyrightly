// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ManifestEvent extends ethereum.Event {
  get params(): ManifestEvent__Params {
    return new ManifestEvent__Params(this);
  }
}

export class ManifestEvent__Params {
  _event: ManifestEvent;

  constructor(event: ManifestEvent) {
    this._event = event;
  }

  get hash(): string {
    return this._event.parameters[0].value.toString();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get manifester(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Manifestations__getManifestationResult {
  value0: string;
  value1: Array<Address>;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: string,
    value1: Array<Address>,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddressArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Manifestations extends ethereum.SmartContract {
  static bind(address: Address): Manifestations {
    return new Manifestations("Manifestations", address);
  }

  getEvidenceCount(hash: string): i32 {
    let result = super.call(
      "getEvidenceCount",
      "getEvidenceCount(string):(uint8)",
      [ethereum.Value.fromString(hash)]
    );

    return result[0].toI32();
  }

  try_getEvidenceCount(hash: string): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getEvidenceCount",
      "getEvidenceCount(string):(uint8)",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  isStaked(hash: string): boolean {
    let result = super.call("isStaked", "isStaked(string):(bool)", [
      ethereum.Value.fromString(hash)
    ]);

    return result[0].toBoolean();
  }

  try_isStaked(hash: string): ethereum.CallResult<boolean> {
    let result = super.tryCall("isStaked", "isStaked(string):(bool)", [
      ethereum.Value.fromString(hash)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isUnevidenced(hash: string): boolean {
    let result = super.call("isUnevidenced", "isUnevidenced(string):(bool)", [
      ethereum.Value.fromString(hash)
    ]);

    return result[0].toBoolean();
  }

  try_isUnevidenced(hash: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUnevidenced",
      "isUnevidenced(string):(bool)",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  staked(param0: string): BigInt {
    let result = super.call("staked", "staked(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_staked(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("staked", "staked(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  timeToExpiry(): BigInt {
    let result = super.call("timeToExpiry", "timeToExpiry():(uint32)", []);

    return result[0].toBigInt();
  }

  try_timeToExpiry(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timeToExpiry", "timeToExpiry():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getManifestation(hash: string): Manifestations__getManifestationResult {
    let result = super.call(
      "getManifestation",
      "getManifestation(string):(string,address[],uint256,uint256)",
      [ethereum.Value.fromString(hash)]
    );

    return new Manifestations__getManifestationResult(
      result[0].toString(),
      result[1].toAddressArray(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getManifestation(
    hash: string
  ): ethereum.CallResult<Manifestations__getManifestationResult> {
    let result = super.tryCall(
      "getManifestation",
      "getManifestation(string):(string,address[],uint256,uint256)",
      [ethereum.Value.fromString(hash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Manifestations__getManifestationResult(
        value[0].toString(),
        value[1].toAddressArray(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _timeToExpiry(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddEvidenceProviderCall extends ethereum.Call {
  get inputs(): AddEvidenceProviderCall__Inputs {
    return new AddEvidenceProviderCall__Inputs(this);
  }

  get outputs(): AddEvidenceProviderCall__Outputs {
    return new AddEvidenceProviderCall__Outputs(this);
  }
}

export class AddEvidenceProviderCall__Inputs {
  _call: AddEvidenceProviderCall;

  constructor(call: AddEvidenceProviderCall) {
    this._call = call;
  }

  get provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddEvidenceProviderCall__Outputs {
  _call: AddEvidenceProviderCall;

  constructor(call: AddEvidenceProviderCall) {
    this._call = call;
  }
}

export class AddStakeCall extends ethereum.Call {
  get inputs(): AddStakeCall__Inputs {
    return new AddStakeCall__Inputs(this);
  }

  get outputs(): AddStakeCall__Outputs {
    return new AddStakeCall__Outputs(this);
  }
}

export class AddStakeCall__Inputs {
  _call: AddStakeCall;

  constructor(call: AddStakeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get hash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddStakeCall__Outputs {
  _call: AddStakeCall;

  constructor(call: AddStakeCall) {
    this._call = call;
  }
}

export class RemoveStakeCall extends ethereum.Call {
  get inputs(): RemoveStakeCall__Inputs {
    return new RemoveStakeCall__Inputs(this);
  }

  get outputs(): RemoveStakeCall__Outputs {
    return new RemoveStakeCall__Outputs(this);
  }
}

export class RemoveStakeCall__Inputs {
  _call: RemoveStakeCall;

  constructor(call: RemoveStakeCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get hash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RemoveStakeCall__Outputs {
  _call: RemoveStakeCall;

  constructor(call: RemoveStakeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetTokenCall extends ethereum.Call {
  get inputs(): SetTokenCall__Inputs {
    return new SetTokenCall__Inputs(this);
  }

  get outputs(): SetTokenCall__Outputs {
    return new SetTokenCall__Outputs(this);
  }
}

export class SetTokenCall__Inputs {
  _call: SetTokenCall;

  constructor(call: SetTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTokenCall__Outputs {
  _call: SetTokenCall;

  constructor(call: SetTokenCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ManifestAuthorshipCall extends ethereum.Call {
  get inputs(): ManifestAuthorshipCall__Inputs {
    return new ManifestAuthorshipCall__Inputs(this);
  }

  get outputs(): ManifestAuthorshipCall__Outputs {
    return new ManifestAuthorshipCall__Outputs(this);
  }
}

export class ManifestAuthorshipCall__Inputs {
  _call: ManifestAuthorshipCall;

  constructor(call: ManifestAuthorshipCall) {
    this._call = call;
  }

  get hash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ManifestAuthorshipCall__Outputs {
  _call: ManifestAuthorshipCall;

  constructor(call: ManifestAuthorshipCall) {
    this._call = call;
  }
}

export class ManifestJointAuthorshipCall extends ethereum.Call {
  get inputs(): ManifestJointAuthorshipCall__Inputs {
    return new ManifestJointAuthorshipCall__Inputs(this);
  }

  get outputs(): ManifestJointAuthorshipCall__Outputs {
    return new ManifestJointAuthorshipCall__Outputs(this);
  }
}

export class ManifestJointAuthorshipCall__Inputs {
  _call: ManifestJointAuthorshipCall;

  constructor(call: ManifestJointAuthorshipCall) {
    this._call = call;
  }

  get hash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get additionalAuthors(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class ManifestJointAuthorshipCall__Outputs {
  _call: ManifestJointAuthorshipCall;

  constructor(call: ManifestJointAuthorshipCall) {
    this._call = call;
  }
}

export class AddEvidenceCall extends ethereum.Call {
  get inputs(): AddEvidenceCall__Inputs {
    return new AddEvidenceCall__Inputs(this);
  }

  get outputs(): AddEvidenceCall__Outputs {
    return new AddEvidenceCall__Outputs(this);
  }
}

export class AddEvidenceCall__Inputs {
  _call: AddEvidenceCall;

  constructor(call: AddEvidenceCall) {
    this._call = call;
  }

  get hash(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddEvidenceCall__Outputs {
  _call: AddEvidenceCall;

  constructor(call: AddEvidenceCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
